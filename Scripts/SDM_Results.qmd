---
title: "A quantile regression approach to define optimal ecological niche (habitat suitability) of cockle populations (Cerastoderma edule)"
description: "SUPPLEMENTARY DATA"
author: "Lehuen Amélie, Dancie Chloé, Grasso Florent, Orvain Francis*"
date: last-modified
editor: source
execute:
  
  eval: true
  echo: false
  message: false
  warning: false
  output: true
  include: false
editor_options: 
  chunk_output_type: console
---

```{r}
rm(list=ls())
# to render all formats of this script (to specific format) IN TERMINAL
# quarto render Scripts/Results.qmd # (--to html --to docx --to pdf)

```

```{r}
#| label: load-packages

list_packages <-c("beepr", "knitr", "conflicted", 
    "tidyverse", "data.table",
    "kableExtra","gt")
installed_packages <- list_packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
  install.packages(list_packages[!installed_packages])
}
invisible(lapply(list_packages, library, character.only = TRUE))

options(knitr.kable.NA = '')

```

<!-- Run the preparation and Seuilflux calculation for all Runs -->

```{r}

# Runs<-c('1.0_Pretreatment_data.qmd',
#         '2.0_Datasets_visualisation.qmd',
#         '3.1_RegQuant_lineaire.qmd',
#         '3.2_RegQuant_non_lineaire.qmd',
#         '3.3_RegQuant_BSpline.qmd')
# map(as.list(Runs[3:5]), #
#     ~source(purl(input = sprintf("Scripts/%s",.x),
#             output = sprintf('Scripts/a_jeter.R') ) ) )

```

# Introduction

```{r}
#| label: workenvir

# backup<-"C:/Users/lehuen201/Back Up AMLH/Melting Pot/BDD/A_SDM_NEO/"
wdmat <-"Matrices/" #paste0(backup,"Matrices/") # 
wdres <- "Results/"
wdgraph <- "Plots/"
wdGIS <- "SIG/"

etude <- "CSLN_Mars"
espece <- "CERED"

save_plot<-TRUE
```

```{r}
#| label: func

source("Scripts/0.0_SDM_functions.R")

```

```{r}
#| label: externdata

rdatain  <- sprintf("%sCSLN_Mars_RQ_BDD.RData",wdmat)
rqdata<-f.loadRData(rdatain)
rdatain  <- sprintf("%sCSLN_Mars_RQnli_BDD.RData",wdmat)
nlrqdata<-f.loadRData(rdatain)
rdatain  <- sprintf("%sCSLN_Mars_RQbsp_BDD.RData",wdmat)
rqbsdata<-f.loadRData(rdatain)
rdatain  <- sprintf("%sCSLN_Mars_plot.RData",wdmat)
load(rdatain)
rdatain  <- sprintf("%sCSLN_Mars_BDD.RData",wdmat)
load(rdatain) #load(here::here(rdatain))
load(sprintf("SIG/OSM_extraction.RData"))
gc() # used to lighten RAM

```

```{r}
#| label: outfiles
rdataout  <- sprintf("%sA_SDM_Results.RData",wdmat)
# if exists
# load(rdataout)

```

```{r}
#| label: basicvar

sp <- which(speciesMP$SPCourt == espece)
sai <- which(saison$M_Def == "Year")
taut <- which(taus %in% c(tauchoice))

factors<-predict # %>% filter(Var %in% Var_choosen)

tmp_sdm_comb_sel_l<-sdm_comb_sel %>% 
  split(., .$Desc_bio) %>% 
  map(., ~split(.x,.x$sdmname))

```

```{r}
#| label: graphchart

my.dpi<-600
```

# Materials and Methods

::: column-page-right
All data processing was conducted in `r R.version.string` except for MARS 3D pre-treatment in Matlab 2019a. Significance levels are p \< .0001 with "\*\*\*\*", p \< .001 with "\*\*\*", p \< .01 with "\*\*", p \< .05 with "\*".
:::

## Study area

::: column-page-right
Several historically known areas of the Seine estuary with different habitats or communities were studied, mainly mudflats and subtidal areas (@fig-map).

```{r}
#| label: fig-map
#| include: true
#| fig-cap: "Maps of habitats areas defined in the study area. Dots represent the location of the biological samples"

tmap_mode("view") # "plot" "view"
tm_study_map_html

if(save_plot){
  ggsave(plot =  tm_study_map,
    width = 10, height = 7, dpi = my.dpi,
    filename=sprintf("%sfig-map.tiff", wdgraph) )  }
```
:::

## Biological model

## Datasets

### Biological data

::: column-page-right
```{r}
#| label: biostats_1

rawnb <-count(CSLN_raw) %>%
  pull() %>% 
  formatC(., format="f", big.mark=",", digits=0)
cleannb <-count(CSLN) %>% 
  pull() %>% 
  formatC(., format="f", big.mark=",", digits=0)
yearsrange <- CSLN %>% 
  mutate(Annee = as.numeric(levels(Annee))[Annee]) %>% # reconvert factors
  arrange(Annee) %>% 
  slice(c(1,n())) %>% 
  pull(Annee) %>%
  paste(collapse = " to ")
moisyear <- CSLN %>% group_by(Annee,Station_originelle) %>% 
  summarise(nbcamp=n_distinct(Mois)) %>% 
  group_by(nbcamp) %>%
  summarise(nbstat=n_distinct(Station_originelle)) %>% 
  arrange(desc(nbstat)) %>%
  slice(1:2) %>% #slice(c(1,n())) %>%
  pull(nbcamp) %>%
  paste(collapse = " to ")
nbstattot <- CSLN %>% 
  summarise(n_distinct(Station_originelle)) %>% 
  pull()
nbstatyr <- CSLN %>% group_by(Annee) %>% 
  summarise(nbstat=n_distinct(Station_originelle)) %>%
  summarise(nbstat=round(mean(nbstat),0)) %>% 
  pull()
period <- CSLN %>% group_by(Mois) %>% 
  mutate(Mois = month.abb[as.numeric(levels(Mois))[Mois]]) %>%
  summarise(nbstat=n_distinct(Station_originelle)) %>%
  arrange(desc(nbstat)) %>% 
  slice(1:3) %>% 
  pull(Mois) %>% 
  paste(collapse = ", ")
recbef2000 <- CSLN_Mars %>% 
  filter(!Zone  %in% c("Channel","Bay")) %>% # at minimum
  filter(Period == "1996-1999") %>%
  filter(!SPCourt %in% c("SEMBA","AMPIM","AUSMO",
                         "BALCR","MYTED","BIVAL","ANNEL")) %>%
  # filter(SPCourt %in% c(espece)) %>% 
  # summarise(n_distinct(idStationUnique)) %>% 
  count() %>% 
  pull()
richspe <- CSLN %>% 
  summarise(nbstat=n_distinct(Taxon_SNa)) %>% 
  pull()

```

The raw data (n= `r rawnb`) were harmonised and grouped in a single database which contain a total of `r cleannb` observations, and `r nbstattot` sampling stations (with some variation in coordinates from year to year), with an average of `r nbstatyr` stations sampled in each campaign, mainly in `r period`. A series of 5-year periods was chosen among the periods covered by the dataset, from `r yearsrange` (the years before 2000 were discarded as they contained too few observations, n=`r recbef2000`), with `r moisyear` sampling campaigns per year: 2000-2005, including the construction of ‘Port 2000’ which caused major disruptions in the estuary; 2006-2010; 2011-2015; 2016-2019. `r richspe` different species are contained in the records.
:::

### Hydro-Morpho-Sedimentary data

::: column-page-right
```{r}
#| label: abiostats_1

marsweb <- Mars_csv %>% 
  summarise(nbstat=n_distinct(NINJ)) %>% 
  pull() %>% 
  formatC(., format="f", big.mark=",", digits=0)
marsxy <- Mars_csv %>% select(NINJ) %>% 
  separate(NINJ, c("Y", "X"),sep="_") %>%
  mutate(X=as.numeric(X), Y=as.numeric(Y)) %>% 
  summarise(across(.cols=everything(),~(max(.x)-min(.x)))) %>% # sapply(., max)
  unite(fus,Y,X,sep=" by ") %>%
  pull(fus)
marslonlat <- Mars_csv %>% 
  select(Lon,Lat) %>%
  summarise(across(.cols=everything(),
                   ~(sprintf("%g to %g",
                             round(min(.x),4),
                             round(max(.x),4))))) %>%
  unite(fus,Lon,Lat,sep=" and Latitude ") %>%
  pull(fus)
nbmailzone<- Mars_SDM_per %>%
  st_drop_geometry() %>% 
  select(Zone, NINJ) %>% 
  distinct() %>% 
  group_by(Zone) %>%
  summarise(n=n()) %>% 
  unite(nbzone, Zone, n, sep= ": n= ") %>% 
  pull() %>% 
  paste(collapse = ", ") 

marsmaillenb <-CSLN_Mars %>% 
  select(NINJ) %>% 
  drop_na() %>% 
  summarise(nbstat=n_distinct(NINJ)) %>% 
  pull() %>% 
  formatC(., format="f", big.mark=",", digits=0)
marsmaillezone <- CSLN_Mars %>% 
  select(NINJ,Zone) %>% 
  group_by(Zone) %>% 
  drop_na() %>% 
  summarise(nbstat=n_distinct(NINJ)) %>% 
  unite(Zonenb,Zone,nbstat,sep=", n=") %>% 
  pull() %>% 
  paste(collapse = "; ")
marsmailledet <- CSLN_Mars %>% 
  select(NINJ,Tidal_level) %>% 
  drop_na() %>% 
  group_by(Tidal_level) %>% 
  summarise(nbstat=n_distinct(NINJ)) %>% 
  left_join(tidelevels,by=c("Tidal_level"="level")) %>%
  select(-label) %>% 
  unite(Tidalnb,Tidal_level,descr,sep=" (") %>% 
  unite(Tidalnb,Tidalnb,nbstat,sep=", n= ") %>% 
  pull() %>% 
  paste(collapse = "), ")


```

The All Seine Bay MARS 3D model was calculated using a grid of `r formatC(700*112, format="f", big.mark=",", digits=0)` cells (700 by 112), focused on the Seine Estuary with a mesh of `r marsweb` cells (`r marsxy`), where the cells were on average 100m long, with the coordinates of Longitude `r marslonlat`. Each area defined a group with several cells (`r nbmailzone`).

The HMS model cells corresponding to the location of the stations in the biological dataset totalled `r marsmaillenb` with the following distribution: `r marsmaillezone`. The positions in the tidal area are: `r marsmailledet`).
:::

### Calculation and selection of predictors

## Models adjustments

### Quantile regression

::: column-page-right
The three model types were computed with different quantiles \tau= \[`r paste0(taus,collapse=", ")`\], 0.5 being the equivalent of an OLS regression, and kept as a reference, the other values higher than 0.9 to seek for the optimum response.
:::

### Two abiotic factor sets tested

::: column-page-right
The biological responses used were density \[ind.m-2\] and biomass \[gAFDW.m-2\] (in Ash Free Dry Weight), and were compared for each model. Sets were built with two crossed abiotic factors to more accurately describe the local environment. The sets tested were:

A.  Daily max current speed \[`r factors[2,3]`\] and inundation time \[`r factors[3,3]`\]: These variables are easily retrieved at high frequency and enable comparison with [@cozzoli2014].They are also interesting because they contain information on the position in the tidal area that could evolve with sea level rise and information on the hydrological conditions including fluctuations in the flow rate of the river linked to climate change. A significant correlation was observed between these two variables in the HMS dataset (Corr = `r dfcornew %>% filter(variable %in% "flow_mxd") %>% select(inunt) %>% pull()`)
B.  Daily salinity range and temperature  \[`r factors[6,3]`\]: These factors are easily measurable at high frequency (Goberville et al., 2010) (Corr = `r dfcornew %>% filter(variable %in% "sal_dtd") %>% select(temp_m) %>% pull()`). They illustrate two aspects of climate change: global warming and changes in the river regime that have an impact on the salinity profile of the estuary (Lheureux et al., 2022). Temperature also has an impact on the metabolism of the fauna and hence on their activity.
C.  Daily salinity range and bathymetry \[`r factors[9,3]`\]: Both factors are accessible at high frequency, at large scale, and can be measured remotely. They provide a good geographical description of the estuary, and are strongly affected by climate change, especially by sea level rise, marine intrusion, and changes in the river regime (Corr = `r dfcornew %>% filter(variable %in% "sal_dtd") %>% select(bathy) %>% pull()`).
D.  Mud content \[`r factors[14,3]`\] and daily max bed shear stress \[`r factors[11,3]`\]: These variables play a determining role in building an erosion model in the HMS model (Corr = `r dfcornew %>% filter(variable %in% "mudrate_m") %>% select(tenfon_mxd) %>% pull()`). In addition, the choice relies on close links between the features of the sediment and the responses of the benthic communities (Andersen et al., 2005).
:::

### Model Validation

# Results

## Description of the biological data set

::: column-page-right
```{r}
#| label: prefig-bio_struc

cerednb <- CSLN %>%
  filter(SPCourt %in% c(espece)) %>% 
  summarise(nbstat=n_distinct(idStationUnique)) %>% 
  pull()

cereddetper <- CSLN %>% 
  filter(SPCourt %in% c(espece)) %>% 
  group_by(Period) %>% 
  summarise(nbstat=n_distinct(idStationUnique)) %>% 
  unite(Periodnb,Period,nbstat,sep=" (n= ") %>% 
  pull() %>% 
  paste(collapse = "), ")

cereddetzon <- CSLN %>% 
  filter(SPCourt %in% c(espece)) %>% 
  filter(grepl("Mudflat",.$Zone)) %>%
  group_by(Zone) %>% 
  summarise(nbstat=n_distinct(idStationUnique)) %>% 
  arrange(desc(nbstat)) %>% 
  unite(Zonenb,Zone,nbstat,sep=" (n= ") %>% 
  pull() %>% 
  paste(collapse = "), ")
```

Biological data for *C. edule* comprised a total of n= `r cerednb` observations. The observations were split into periods as `r cereddetper`). The following treatment only focussed on the mudflats used by *C. edule* (`r cereddetzon`)). Differences in biomass \[gAFDW/m²\] and density \[ind/m²\] are detailed as a function of the period and the different areas concerned (@fig-bio_struc). The only noticeable spatial and temporal differences concerned biomass in the south mudflat and the north (median and downstream) mudflats in the period 2000-2005.

```{r}
#| label: fig-bio_struc
#| include: true
#| column: page-right
#| fig-cap: "C. edule population biomass [gAFDW/m²] and density [ind/m²] in the Seine estuary, by period for each area (A) and by areas for each period (B). Dots represent the mean and standard error of each sub-group."
#| fig-width: 16
#| fig-height: 6

wrap_plots(pl_des_gt) +
  plot_layout(ncol=2)

if(save_plot){
  ggsave(plot = wrap_plots(pl_des_gt),
         width=16, height=8, dpi=my.dpi,
         filename=sprintf("%sfig-bio_struc.tiff",wdgraph) )  }
       
if(save_plot){
  iwalk(pl_des_gt,
    ~ggsave(plot = .x,
         width=12, height=6, dpi=my.dpi, 
         filename=sprintf("%sfig-bio_struc_%s.tiff",wdgraph,.y) ) )  }

```
:::

## Selection of the Hydro-Morpho-Sedimentary factors

```{r}
#| label: fig-mars_corr
#| include: true
#| fig-cap: "Correlation plot of all variables extracted from MARS3D dataset corresponding to biomass and densities from biological dataset. Correlation scores are shown above the diagonal, scatter plots with a linear regression below the diagonal, while the diagonal itself shows the density plot of each variable." 
#| fig-width: 14
#| fig-height: 10

pl_mars_corr

if(save_plot){
  ggsave(plot = pl_mars_corr,
         width=16, height=9, dpi=my.dpi,
         filename=sprintf("%sfig-mars_corr.tiff",wdgraph) )  }

```

### Predictors selection

```{r}
#| label: fig-mars_matrix
#| include: true
#| fig-cap: "Correlation matrix of each abiotic factors and biomass and density of C. edule"
#| fig-width: 16
#| fig-height: 10

pl_mars_corr

```

::: panel-tabset

#### Scree plot
```{r}
#| label: fig-mars_pca1
#| include: true
#| fig-cap: "Screeplot for abiotic factors"
#| fig-width: 16
#| fig-height: 10

pl_pca1

```

#### Graph of variables
```{r}
#| label: fig-mars_pca3
#| include: true
#| fig-cap: "PCA for abiotic factors"
#| fig-width: 16
#| fig-height: 10

pl_pca3
if(save_plot){
  ggsave(filename=sprintf("%sHMS_R/fig-mars_pca3.tiff", wdgraph),
    plot =  pl_pca3 ,
    width = 9, height = 10, dpi = my.dpi )  }
```

#### Graph with areas and tidal level
```{r}
#| label: fig-mars_pca6
#| include: true
#| fig-cap: "PCA for abiotic factors with areas and tidal level"
#| fig-width: 16
#| fig-height: 10

pl_pca6
if(save_plot){
  ggsave(filename=sprintf("%sHMS_R/fig-mars_pca6.tiff", wdgraph),
    plot =  pl_pca6,
    width = 6, height = 10, dpi = my.dpi )  }
```

:::

```{r}
#| label: globcorr

df <- CSLN_mud %>% 
  filter(SPCourt == espece) %>%
  select(paste(factors[,1],saison[sai,1],sep=""),
         map(reponse_l,~.x$Var) %>% unlist(., use.names=FALSE) )

dfcornew <- f.corstars(df, result="none",removeTriangle="") %>% 
  mutate(variable=rownames(.)) %>% 
  relocate(variable)
# dftest<-dfcornew %>% mutate(across(.cols = everything(), str_replace_all, ".*\\s", ""))

```

-   **Daily maximum current speed** \[`r factors[2,3]`\] was preferred to current speed  \[`r factors[1,3]`\] to reflect the hydrodynamics that occur on the mudflats due to tidal cycles (Corr = `r dfcornew %>% filter(variable %in% "flow_mxd") %>% select(flow_m) %>% pull()`).
-   **Inundation time** \[`r factors[3,3]`\] is usually used to reflect the tidal position of benthic organisms.
-   **Daily salinity range** (min-max of the day) was preferred to salinity to emphasise the influence of the tide (Corr = `r dfcornew %>% filter(variable %in% "sal_dtd") %>% select(sal_m) %>% pull()`).
-   **Temperature** \[`r factors[6,3]`\] was picked upon temperature daily range \[`r factors[7,3]`\] for its accessibility (Corr = `r dfcornew %>% filter(variable %in% "temp_dtd") %>% select(temp_m) %>% pull()`) and the range being reflected by the inundation time (Corr = `r dfcornew %>% filter(variable %in% "temp_dtd") %>% select(inunt) %>% pull()`).
-   **Mud content** \[`r factors[14,3]`\] (particles \<63µm) was preferred to the total concentration of sediment \[`r factors[13,3]`\] to reflect the condition of the habitat (Corr = `r dfcornew %>% filter(variable %in% "mudrate_m") %>% select(Csed_m) %>% pull()`).
-   **Daily maximum bed shear stress** \[`r factors[12,3]`\] is poorly correlated with bed shear stress \[`r factors[11,3]`\] (Corr = `r dfcornew %>% filter(variable %in% "tenfon_mxd") %>% select(tenfon_m) %>% pull()`) but the former was nevertheless preferred as evidence for the extreme local conditions that can lead to erosion of the sediment.
-   **Bathymetry** \[`r factors[9,3]`\] relative to the mean sea level, is correlated with several factors, but poorly with the daily salinity range (Corr = `r dfcornew %>% filter(variable %in% "sal_dtd") %>% select(bathy) %>% pull()`). It was kept for its wide accessibility in any estuary.
-   MES mud \[`r factors[8,3]`\] was not selected to focus on benthic erosion phenomena more than maximal turbidity zone (MTZ) processes even though it was not correlated to a lot of factors.

There was no correlation between biological variables (biomass and density) and any of the environmental factors. Despite the high level of correlation and significance between biomass and density (Corr = `r dfcornew %>% filter(variable %in% "Density_indm2") %>% select(Biomass_gAFDWm2) %>% pull()`), neither of the factors was fully redundant, and the two were consequently analysed in parallel.

## Description of the Hydro-Morpho-Sedimentary data 

::: column-page-right
```{r}

df<- Mars_SDM_per %>% 
  st_drop_geometry() %>% 
  group_by(Zone) %>% 
  dplyr::summarise(across(all_of(Var_choosen),
                          list(m=~mean(.x,na.rm=TRUE),
                               sd=~sd(.x,na.rm=TRUE)),
                          .names = "{.col}.{.fn}" ) ) %>% 
  mutate(across(where(is.numeric),~round(.x,2)))

```

The selected predictors were observed in the same period and in the same area as the biological data (@fig-mars_map). Generally speaking, all the factors differed significantly in area and period:

-   Daily max current speed \[m.s^{-1}\]: mean of `r df$flow_mxd.m[which(df$Zone=="Channel")]` +/- `r df$flow_mxd.sd[which(df$Zone=="Channel")]`(upstream `r df$flow_mxd.m[which(df$Zone=="North Upstream Mudflat")]` +/- `r df$flow_mxd.sd[which(df$Zone=="North Upstream Mudflat")]`; median `r df$flow_mxd.m[which(df$Zone=="North Median Mudflat")]` +/- `r df$flow_mxd.sd[which(df$Zone=="North Median Mudflat")]`). 

-   Inundation time \[%\]

-   Daily salinity range

-   Temperature \[°C\]

-   Mud content \[%\]

-   Daily max bed shear stress \[N.m^{-2}\]: channel BSS mean (`r df$tenfon_mxd.m[which(df$Zone=="Channel")]` +/- `r df$tenfon_mxd.sd[which(df$Zone=="Channel")]`), BSS in the other areas (`r round(mean(df$tenfon_mxd.m[-which(df$Zone=="Channel")]),2)` +/- `r round(sd(df$tenfon_mxd.m[-which(df$Zone=="Channel")]),2)`). 

-   Bathymetry \[m\]: The depth of the channel and offshore mean range of `r paste0(range(df$bathy.m[which(df$Zone %in% c("Channel", "OffShore"))]),collapse="-")`. The north downstream mudflat and the south mudflat were the next deepest areas (`r round(mean(df$bathy.m[which(df$Zone %in% c("North Downstream Mudflat", "South Mudflat"))]),2)` +/- `r round(sd(df$bathy.m[which(df$Zone %in% c("North Downstream Mudflat", "South Mudflat"))]),2)` ), the median mudflat was `r df$bathy.m[which(df$Zone %in% c("North Median Mudflat"))]` +/- `r df$bathy.sd[which(df$Zone %in% c("North Median Mudflat"))]`, and north upstream mudflat was the shallowest, `r df$bathy.m[which(df$Zone %in% c("North Upstream Mudflat"))]` +/- `r df$bathy.sd[which(df$Zone %in% c("North Upstream Mudflat"))]` (negative bathymetry being above the mean height of sea water).

::: panel-tabset
### Map

```{r}
#| label: fig-mars_map
#| include: true
#| fig-cap: "Mars3D selected factors maps in the Seine estuary"
#| fig-width: 16
#| fig-height: 12

tmap_mode("plot") # "plot" "view"

tm_mars_gb

```

### Density plots

```{r}
#| label: fig-mars_st_brd
#| include: true
#| fig-cap: "Mars3D selected factors density plot in the Seine estuary"
#| fig-width: 14
#| fig-height: 12

pl_mars_st_board$all

if(save_plot){
  ggsave(plot = pl_mars_st_board$all,
          width=12, height=16, dpi=my.dpi,
          filename=sprintf("%s/mars_st_brd.tiff", wdgraph) )  }

```
:::

### Predictor density plots detailed
::: panel-tabset
```{r}
#| include: true
#| results: asis
#| fig-cap: "Mars3D selected factors distribution in the Seine estuary, by Period for each area (A) and by areas for each Period (B)"
#| fig-width: 16
#| fig-height: 10

iwalk(pl_mars_gt, 
      ~ {
        cat('#### ', .y, '\n\n')
        print(.x)
        cat('\n\n')
        })

if(save_plot){
  iwalk(pl_mars_gt,
    ~ggsave(plot = .x,
            width=12, height=8, dpi=my.dpi, 
            filename=sprintf("%sfig-hms_struc_%s.tiff",wdgraph,.y) ) )  }


```
:::

## Methodology assessment

```{r}

if(save_plot){
  ggsave(plot =  rqdata$pl_rq_all_1d$Biomass$RQ1add_11110 +
           theme(plot.title = element_blank()) ,
    width = 5, height = 5, dpi = my.dpi,
    filename=sprintf("%sRQ_li_example.tiff",wdgraph) )  }
if(save_plot){
  ggsave(plot =  nlrqdata$pl_rq_all_1d$Biomass$RQ1nli_11110 +
           theme(plot.title = element_blank()) ,
    width = 5, height = 5, dpi = my.dpi,
    filename=sprintf("%sRQ_nli_example.tiff",wdgraph) )  }
if(save_plot){
  ggsave(plot =  rqbsdata$pl_rq_all_1d$Biomass$RQ1bsp_11110 +
           theme(plot.title = element_blank()) ,
    width = 5, height = 5, dpi = my.dpi,
    filename=sprintf("%sRQ_bs_example.tiff",wdgraph) )  }

# tmp_plot<-(rqdata$pl_rq_all_1d[["Biomass"]][["RQ1add_11110"]] +
#            nlrqdata$pl_rq_all_1d[["Biomass"]][["RQ1nli_11110"]]) &
#   plot_layout(nrow=1, guides="collect") &
#   theme(legend.positi6on = "bottom") &
#   plot_annotation(tag_levels = c("A"))
# if(save_plot){
# ggsave(plot = tmp_plot,
#   width = 12, height = 6, dpi=my.dpi,
#   filename=sprintf("%sRQ lin nli 1D compa example.tiff",wdgraph))  }


```

::: column-page-right
```{r}
#| label: aic_res_3mod

tmp<- bind_rows(
  rqdata$rq_Mod_sel_sm,
  nlrqdata$rq_Mod_sel_sm,
  rqbsdata$rq_Mod_sel_sm)

tmpaic <- bind_rows(
  rqdata$rq_Mod_sel_sm,
  nlrqdata$rq_Mod_sel_sm,
  rqbsdata$rq_Mod_sel_sm) %>% 
  group_by(typetxt) %>% 
  summarise(m=round(mean(Delta_AICc),0),
            sd=round(sd(Delta_AICc),0)) %>%
  arrange(m) %>% 
  unite(msd,m,sd,sep=" +/- ") %>% 
  unite(tmsd,typetxt,msd,sep=" = ") %>% 
  pull() %>% 
  paste(collapse = ", ")

tmpaic2<- bind_rows(
  rqdata$rq_Mod_sel_sm,
  nlrqdata$rq_Mod_sel_sm,
  rqbsdata$rq_Mod_sel_sm) %>% 
  group_by(typetxt,tau) %>%
  filter(reponse=="Biomass_gAFDWm2") %>% 
  summarise(m=round(mean(Delta_AICc),0),
            sd=round(sd(Delta_AICc),0)) %>% 
  filter(tau==tauchoice) %>%
  arrange(m) %>% 
  select(-tau) %>% 
  unite(msd,m,sd,sep=" +/- ") %>% 
  unite(tmsd,typetxt,msd,sep=" = ") %>% 
  pull() %>% 
  paste(collapse = ", ")

tmprone <- bind_rows(
  rqdata$rq_Mod_sel_sm,
  nlrqdata$rq_Mod_sel_sm,
  rqbsdata$rq_Mod_sel_sm) %>% 
  group_by(typetxt) %>% 
  summarise(m=round(mean(Rone),3),
            sd=round(sd(Rone),3)) %>%
  arrange(desc(m)) %>% 
  unite(msd,m,sd,sep=" +/- ") %>% 
  unite(tmsd,typetxt,msd,sep=" = ") %>% 
  pull() %>% 
  paste(collapse = ", ")

tmprone2<- bind_rows(
  rqdata$rq_Mod_sel_sm,
  nlrqdata$rq_Mod_sel_sm,
  rqbsdata$rq_Mod_sel_sm) %>% 
  group_by(typetxt,tau) %>% 
  filter(reponse=="Biomass_gAFDWm2") %>% 
  summarise(m=round(mean(Rone),3),
            sd=round(sd(Rone),3)) %>% 
  filter(tau==tauchoice) %>%
  arrange(desc(m)) %>% 
  select(-tau) %>% 
  unite(msd,m,sd,sep=" +/- ") %>% 
  unite(tmsd,typetxt,msd,sep=" = ") %>% 
  pull() %>% 
  paste(collapse = ", ")
  
```

All three models were used to calculate the SDM for each set at the different quantiles chosen. A general comparison of ∆AICc scores was undertaken for all the SDMs computed (@fig-aic_3mod). The SDM scores based on density were significantly higher than those based on biomass, and the choice of the quantile had a strong impact on the score. For instance, the best scores were obtained for the biomass SDMs with the 0.5 quantile, which would not help describe the optimum ecological niche. On average, the BSpline model ∆AICc were lower than the others (`r tmpaic`). With the same biological response and quantile (Biomass and tau=0.95), the variations between SDM ∆AICcs were quite low with respect to total variability (`r tmpaic2`).

The predicted/observed plots (@fig-rq_po_brd shows an example from set A), completed the observations of ∆AICc, i.e. RQ2bsp \> RQ2nli \> RQ2int (the regression lines of each quantile were closer to the 1:1 line). However, RQ2nli performed better than RQ2bsp at some quantiles, in particular at the 95th centile, which was defined as the optimum quantile, i.e. the highest quantile that did not affect model quality, and was hence used for all subsequent analyses.

Based on the range of both predictors under each set, the quantile responses of SDMs were calculated and illustrated by a surface plot (@fig-3mod shows an example from set A, interactive 3D plots below). Although the performance indicators were good, graphically, the RQ2bsp model showed overfitting which prevented both modelling and prediction. This model was thus not used for any more analysis.

```{r}
#| label: fig-aic_3mod
#| include: true
#| column: page-right
#| fig-cap: "∆AICc comparison for all SDMs computed, according to the quantile, the type of model and the response."
#| fig-height: 4

AIC_plot<-bind_rows(
            rqdata$rq_Mod_sel_sm,
            nlrqdata$rq_Mod_sel_sm,
            rqbsdata$rq_Mod_sel_sm) %>% 
  left_join(model_types, by=c("typetxt"="code")) %>% 
  mutate(reponset=gsub(" ", "\n",reponset)) %>% 
  # select(all_of(c("Delta_AICc","Rone","reponse","typetxt","tau"))) %>% 
  select(all_of(c("Delta_AICc","reponset","analysis","tau"))) %>% 
  distinct %>% 
  pivot_longer(cols=-c("reponset","analysis","tau"), 
               names_to = "Indicator", values_to = "value") %>% 
  # filter(.,grepl(paste0(sdm_comb_sel$type[1,],collapse="|"),sdmname)) %>% 
  group_by(tau) %>%
  ggplot(aes(x=reponset, #reorder(factors,-AIC),
             y=value,
             color = factor(tau),
             shape = analysis)) +
  geom_jitter(size= 4,width=.3, height=0 ) +
  scale_shape_manual(values=c(1, 8, 23)) +
  scale_color_manual(values=colRQ) +
  # facet_grid(.~Indicator, scales="free") +
  labs(#title=titleG, 
       y=bquote(Delta*AICc), #y="Indicator",
       color="Quantile",shape="Model") +
  theme(aspect.ratio=1,
        axis.text = element_text(size=10,face="bold"),
        axis.title.y = element_blank()) +
  coord_flip(); AIC_plot
  
if(save_plot){
  ggsave(plot = AIC_plot,
         width=6, height=4, dpi=my.dpi,
         filename=sprintf("%sfig-aic_3mod.tiff",wdgraph) )  }

```

```{r}
#| label: fig-rq_po_brd
#| include: true
#| column: page-right
#| fig-cap: "Example of modelled vs observed data plotted for each model based on biomass under set A. The black line represents the 1:1 ratio."
#| fig-width: 14
#| fig-height: 5

pl_rq_po_sel<-map2(rqdata$pl_rq_po_sel,tmp_sdm_comb_sel_l,
            ~ map2(.x,.y[names(.x)],
              ~.x + labs(title=.y$analysis) ) ) #; plot_rq$Biomass$RQ2int_11112
pl_nlrq_po_sel<-map2(nlrqdata$pl_rq_po_sel,tmp_sdm_comb_sel_l,
            ~ map2(.x,.y[names(.x)],
              ~.x + labs(title=.y$analysis)) )
pl_rqbs_po_sel<-map2(rqbsdata$pl_rq_po_sel,tmp_sdm_comb_sel_l,
            ~ map2(.x,.y[names(.x)],
              ~.x + labs(title=.y$analysis)) ) 

pl_tmp<- pmap(list(pl_rq_po_sel,pl_nlrq_po_sel,pl_rqbs_po_sel,tmp_sdm_comb_sel_l) ,
          ~{ pmap(list(..1,..2,..3,..4[names(..1)]) ,
             ~{ wrap_plots(list(..1,..2,..3),
                           guides="collect") & 
                plot_layout(nrow=1,widths = c()) &
                theme(legend.position="bottom",
                      aspect.ratio=1) &
                plot_annotation(tag_levels = c('A'),
                                title=sprintf("%s & %s",..4$whole_x1,..4$whole_x2))
               } ) } )

pl_tmp$Biomass$RQ2int_11112

if(save_plot){
  walk(pl_tmp,
    ~{iwalk(., ~ggsave(plot = .x,
                      width=11, height=5, dpi=my.dpi,
                      filename=sprintf("%sfig-rq_po_brd_%s.tiff", wdgraph, .y)) ) } )  }
```

```{r}
#| label: prefig-3mod

repi<-1
sdi<-1
titleG <- sprintf("Linear QR comparison addition and interacton")
p1<-rqdata$pl_rq_sel_2d[[repi]][[sdi]]$all + 
      labs(title="Linear interaction",
           fill=expression(g[AFDW]~.m^{-2}) ) # reponse$Unit[repi] ou Unit_tx? bquote?
p2<-nlrqdata$pl_rq_sel_2d[[repi]][[sdi]]$all + 
      labs(title="Gaussian non-linear",
           fill=expression(g[AFDW]~.m^{-2}) ) # reponse$Unit[repi]
p3<-rqbsdata$pl_rq_sel_2d[[repi]][[sdi]]$all + 
      labs(title="B-Spline linear",
           fill=expression(g[AFDW]~.m^{-2}) ) # reponse$Unit[repi]

plot_tmp <- ggarrange(
  p1 + theme(axis.title = element_blank(),
             legend.text = element_text(size=8),
             aspect.ratio=1) +
      scale_fill_gradientn(colours=colRQ,limits=c(0,max(
        max(p1$data$RqMod,na.rm=TRUE),
        max(p2$data$RqMod,na.rm=TRUE)
        ))),
  p2 + theme(axis.title = element_blank(),
             legend.text = element_text(size=8),
             aspect.ratio=1) +
      scale_fill_gradientn(colours=colRQ,limits=c(0,max(
        max(p1$data$RqMod,na.rm=TRUE),
        max(p2$data$RqMod,na.rm=TRUE)
        ))),
  p3 + theme(axis.title = element_blank(),
             legend.text = element_text(size=8),
             aspect.ratio=1) +
      scale_fill_gradientn(colours=colRQ,limits=c(0,max(
        max(p1$data$RqMod,na.rm=TRUE),
        max(p2$data$RqMod,na.rm=TRUE)
        ))),
  ncol=3, nrow=1,
  labels="AUTO",
  legend="bottom", common.legend = TRUE)
plot_2d <- annotate_figure(plot_tmp,
                # top = text_grob(titleG, size=18),
                left = text_grob(p1$labels$y, rot = 90),
                bottom = text_grob(p1$labels$x))


if(save_plot){
  ggsave(plot = plot_2d + bgcolor("white"),
       width=18, height=8, dpi=my.dpi,
       filename=sprintf("%sfig-3mod.tiff",wdgraph)) }

# # In case to redo the snapshot of 3d plots, snapshot are done manually
# fig<-rqdata$pl_rq_sel_3d$Biomass$RQ2int_11112$all %>%
#   layout(scene = list(
#     xaxis = list(titlefont = list(size = 24), tickfont = list(size = 16)),
#     yaxis = list(titlefont = list(size = 26), tickfont = list(size = 16)),
#     zaxis = list(titlefont = list(size = 26), tickfont = list(size = 16)) )) %>%
#   config( toImageButtonOptions = list( format = "png" )  ) ; fig
# fig<-nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11112$all %>%
#   layout(scene = list(
#     xaxis = list(titlefont = list(size = 24), tickfont = list(size = 16)),
#     yaxis = list(titlefont = list(size = 26), tickfont = list(size = 16)),
#     zaxis = list(titlefont = list(size = 26), tickfont = list(size = 16)) )) %>%
#   config( toImageButtonOptions = list( format = "png" )  ) ; fig
# fig<-rqbsdata$pl_rq_sel_3d$Biomass$RQ2bsp_11112$all %>%
#   layout(scene = list(
#     xaxis = list(titlefont = list(size = 24), tickfont = list(size = 16)),
#     yaxis = list(titlefont = list(size = 26), tickfont = list(size = 16)),
#     zaxis = list(titlefont = list(size = 26), tickfont = list(size = 16)) )) %>%
#   config( toImageButtonOptions = list( format = "png" )  ) ; fig

im_RQ2int <- fig("Pictures/fig-graph_3d_RQ2int_11112.png")
im_RQ2nli <- fig("Pictures/fig-graph_3d_RQ2nli_11112.png")
im_RQ2bsp <- fig("Pictures/fig-graph_3d_RQ2bsp_11112.png") 
plot_img3d<- (im_RQ2int | im_RQ2nli | im_RQ2bsp) &
  plot_annotation(tag_levels = c('A'))

if(save_plot){
  ggsave(plot = plot_img3d,
       width=21, height=7, dpi=my.dpi,
       filename=sprintf("%sfig-3mod3d.tiff",wdgraph)) }

```

```{r}
#| label: fig-3mod
#| include: true
#| column: page-right
#| fig-cap: "Examples of SDM surface plots under set A: linear with interaction (A), Gaussian non-linear (B) and Cubic B-Spline linear (C). The upper panel shows the surfaces side by side, the lower panel shows the 3D plots with all processed quantiles superposed. The biological data observed with this model are represented by a contour plot, the data over the model are represented by red stars."
#| fig-width: 16
#| fig-height: 10

plot_tmp<- plot_2d / plot_img3d +
  plot_layout(widths = c()) 
print(plot_tmp)

if(save_plot){
  ggsave(plot = plot_tmp,
       width=16, height=13, dpi=my.dpi,
       filename=sprintf("%sfig-3mod_n_3d.tiff",wdgraph))  }
```

::: {.content-visible when-format="html"}

```{r}
#| label: fig-3mod_3d_plotly
#| include: true
#| column: page-right
#| layout-ncol: 3
#| fig-cap: "SDM interactive 3D plots"
#| fig-width: 16
#| fig-height: 10

rqdata$pl_rq_sel_3d$Biomass$RQ2int_11112$all
nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11112$all
rqbsdata$pl_rq_sel_3d$Biomass$RQ2bsp_11112$all

```
:::

:::

## Species Distribution Models – Optimal Ecological Niche (SDM)

### Comparison of linear and nonlinear Quantile Regression

::: column-page-right
```{r}
#| label: scores

rq_opti<-map_depth(rqdata$rq_Mod_sel,2,
  ~{ .x$mod_pred_t %>% 
      filter(tau==tauchoice) %>% 
      summarise(maxsdm=max(RqMod,na.rm=TRUE),
                optx1=x1[which.max(RqMod)],
                optx2=x2[which.max(RqMod)]) %>% 
      mutate(across(.cols=everything(),~round(.,2)))} ) %>% 
  map(., ~bind_rows(.x,, .id = "id"))

nlrq_opti<-map_depth(nlrqdata$rq_Mod_sel,2,
  ~{ .x$mod_pred_t %>% 
      filter(tau==tauchoice) %>% 
      summarise(maxsdm=max(RqMod,na.rm=TRUE),
                optx1=x1[which.max(RqMod)],
                optx2=x2[which.max(RqMod)]) %>% 
      mutate(across(.cols=everything(),~round(.,2)))} ) %>% 
  map(., ~bind_rows(.x,, .id = "id"))

```

The four sets (A, B, C and D) were treated with one of the two selected models: either linear with interaction, or non-linear with a bifactorial Gaussian equation, with biomass as biological response (with predict/observed plot, SDMs with the distribution of HMS data, RQ2nli SDMs were represented in 3D graph in @sec-sdm_3d).

A.  Daily max current speed \[`r factors[2,3]`\] and inundation time \[`r factors[3,3]`\]:
    1.  RQ2int optimum was `r rq_opti$Biomass$maxsdm[1]`gAFDW/m², at `r rq_opti$Biomass$optx1[1]` `r  factors[2,3]` and `r rq_opti$Biomass$optx2[1]` `r factors[3,3]`; RQ2nli optimum was `r nlrq_opti$Biomass$maxsdm[1]`gAFDW/m² at `r nlrq_opti$Biomass$optx1[1]` `r factors[2,3]` and `r nlrq_opti$Biomass$optx2[1]` `r factors[3,3]`.

    2.  RQ2int optimum was `r rq_opti$Density$maxsdm[1]`ind/m² at `r rq_opti$Density$optx1[1]` `r  factors[2,3]` and `r rq_opti$Density$optx2[1]` `r factors[3,3]`; RQ2nli optimum was `r nlrq_opti$Density$maxsdm[1]`ind/m² at `r nlrq_opti$Density$optx1[1]` `r factors[2,3]` and `r nlrq_opti$Density$optx2[1]` `r factors[3,3]`.
    
B.  Daily salinity range and temperature \[`r factors[6,3]`\]:
    1.  RQ2int optimum was `r rq_opti$Biomass$maxsdm[2]`gAFDW/m² at `r rq_opti$Biomass$optx1[2]` `r factors[5,3]` and `r rq_opti$Biomass$optx2[2]` `r factors[6,3]`; RQ2nli optimum was `r nlrq_opti$Biomass$maxsdm[2]`gAFDW/m² at `r nlrq_opti$Biomass$optx1[2]` `r factors[5,3]` and `r nlrq_opti$Biomass$optx2[2]` `r factors[6,3]`.

    2.  RQ2int optimum was `r rq_opti$Density$maxsdm[2]`ind/m² at `r rq_opti$Density$optx1[2]` `r factors[5,3]` and `r rq_opti$Density$optx2[2]` `r factors[6,3]`; RQ2nli optimum was `r nlrq_opti$Density$maxsdm[2]`ind/m² at `r nlrq_opti$Density$optx1[2]` `r factors[5,3]` and `r nlrq_opti$Density$optx2[2]` `r factors[6,3]`.
    
C.  Daily salinity range and bathymetry \[`r factors[9,3]`\]: 
    1.  RQ2int optimum was `r rq_opti$Biomass$maxsdm[3]`gAFDW/m² at `r rq_opti$Biomass$optx1[3]``r factors[5,3]` and `r rq_opti$Biomass$optx2[3]` `r factors[9,3]`; RQ2nli optimum was `r nlrq_opti$Biomass$maxsdm[3]`gAFDW/m² at `r nlrq_opti$Biomass$optx1[3]` `r factors[5,3]` and `r nlrq_opti$Biomass$optx2[3]` `r factors[9,3]`.

    2.  RQ2int optimum was `r rq_opti$Density$maxsdm[3]`ind/m² at `r rq_opti$Density$optx1[3]` `r factors[5,3]` and `r rq_opti$Density$optx2[3]` `r factors[9,3]`; RQ2nli optimum was `r nlrq_opti$Density$maxsdm[3]`ind/m² at `r nlrq_opti$Density$optx1[3]` `r factors[5,3]` and `r nlrq_opti$Density$optx2[3]` `r factors[9,3]`.
    
D.  Mud content \[`r factors[14,3]`\] and bed shear stress \[`r factors[11,3]`\]:
    1.  RQ2int optimum was `r rq_opti$Biomass$maxsdm[4]`gAFDW/m² at `r rq_opti$Biomass$optx1[4]` `r factors[14,3]` and `r rq_opti$Biomass$optx2[4]` `r factors[11,3]`; RQ2nli optimum wasf `r nlrq_opti$Biomass$maxsdm[4]`gAFDW/m² at `r nlrq_opti$Biomass$optx1[4]` `r factors[14,3]` and `r nlrq_opti$Biomass$optx2[4]` `r factors[11,3]`.

    2.  RQ2int optimum was `r rq_opti$Density$maxsdm[4]`ind/m² at `r rq_opti$Density$optx1[4]` `r factors[14,3]` and `r rq_opti$Density$optx2[4]` `r factors[11,3]`; RQ2nli optimum was `r nlrq_opti$Density$maxsdm[4]`ind/m² at `r nlrq_opti$Density$optx1[4]` `r factors[14,3]` and `r nlrq_opti$Density$optx2[4]` `r factors[11,3]`.

```{r}

plot_rq<-map_depth(rqdata$pl_rq_sel_2d,2,
  ~{ keep_at(.x,"one") %>%
      map(., ~.x[[taut]]) } ) %>% 
  map_depth(.,1,~list_flatten(.x,name_spec = "{outer}"))

plot_nlrq<-map_depth(nlrqdata$pl_rq_sel_2d,2,
  ~{ keep_at(.x,"one") %>%
      map(., ~.x[[taut]]) } ) %>% 
  map_depth(.,1,~list_flatten(.x,name_spec = "{outer}"))

# plot_rqbs<-map_depth(rqbsdata$pl_rq_sel_2d,2,
#   ~{ keep_at(.x,"one") %>%
#       map(., ~.x[[taut]]) } ) %>% 
#   map_depth(.,1,~list_flatten(.x,name_spec = "{outer}"))

```

```{r}
#| label: prefig-brd_2d
 
plot_rq <- map2(plot_rq,plot_nlrq,
  ~ map2(.x,.y,
    ~.x + 
    scale_fill_gradientn(colours=colRQ,limits=c(0,max(
      max(.x$data$RqMod,na.rm=TRUE),
      max(.y$data$RqMod,na.rm=TRUE)))) +
      labs(title=model_types$analysis[2]) +
      theme(axis.title.x = element_blank(),
            plot.margin = unit(c(.1,.1,.1,.1), "null")) ) )
plot_nlrq <- map2(plot_nlrq,plot_rq,
  ~ map2(.x,.y,
    ~.x + 
    scale_fill_gradientn(colours=colRQ,limits=c(0,max(
      max(.x$data$RqMod,na.rm=TRUE),
      max(.y$data$RqMod,na.rm=TRUE)))) +
      labs(title=model_types$analysis[3]) +
    theme(
          plot.margin = unit(c(.1,.1,.1,.1), "null")) ) )

pl_brd_rq_nlrq <- 
  pmap(list(plot_rq,plot_nlrq,reponse_l),
    ~ map2(..1,..2,
        ~ { .x / .y  +
          plot_layout(guides = 'collect',
                      tag_level = 'new',widths = c()) & 
          theme(text=element_text(size=10),
                aspect.ratio=1,
                legend.position = "bottom") 
          } ) %>% 
      wrap_plots(nrow=1,ncol=4,tag_level="new") & #plot_layout(widths = c(.1,50,.1,50)) +
      labs(fill=..3$Unit) & #
      plot_annotation(title = sprintf("SDM based on %s (tau=%g)",..3$whole,taus[taut]),
                      tag_levels = c('A', '1')) & 
      theme()
    ) # ; pl_brd_rq_nlrq$Biomass

if(save_plot){
  iwalk(pl_brd_rq_nlrq,
    ~ggsave(plot = .x,
         width=12, height=6, dpi=my.dpi, 
         filename=sprintf("%sfig-brd_2d_%s.tiff",wdgraph,.y) ) ) }
```

```{r}
#| label: fig-rq_po_sdm

pl_po_sdm<- 
  map2(pl_rq_po_sel,
       pl_nlrq_po_sel,
      ~{map2(.x,.y,
         ~{ (.x / .y)  +
            plot_layout(guides = 'collect',tag_level = 'new',
                        widths = c()) &
            theme(legend.position="bottom",
                  aspect.ratio=1)
           } ) %>% 
  wrap_plots(nrow=1,ncol=4,tag_level="new") + 
  plot_annotation(tag_levels = c('A', '1')) & 
  theme()
        } )

if(save_plot){
  iwalk(pl_po_sdm, ~ggsave(plot = .x,
                      width=14, height=7, dpi=my.dpi,
                      sprintf("%sfig-rq_po_sdm_%s.tiff", wdgraph, .y) ) )  }

# nlrqdata$pl_rq_po_sel$Biomass$RQ2nli_11112

```

```{r}
# with observed mars data
mars_tmp<-
  Mars_SDM_per %>% 
    filter(!Zone %in% c("Bay","Cote Fleurie","Ilot Oiseaux","Octeville")) %>% 
    filter(inunt!=1) 

# ggplot(mars_tmp) +
#     geom_point(aes(x=flow_mxd,y=inunt), color="gray20", alpha=0.2) +
#   # stat_density_2d(aes(x=flow_mxd,y=inunt,
#   #                     fill= "n"), #as.factor(..level..)), breaks=1,
#   #                 geom = "polygon",fill="purple")
#   geom_density_2d(
#       aes(x=flow_mxd,y=inunt),
#       alpha=0.8,color="purple",bins = 30) 

plot_rq_real <- map(plot_rq,
    ~imap(.x, ~{ .x %>% 
          delete_layers(.,"StatDensity2d") %>% 
          delete_layers(.,"GeomPoint") +
          geom_density_2d(data=mars_tmp,
              aes(x=.data[[ pred_red_comb_sel[[substr(.y,11,12)]]$Var[1] ]],
                  y=.data[[ pred_red_comb_sel[[substr(.y,11,12)]]$Var[2] ]] ),
              alpha=0.3,color="gray50",bins = 30)  } ) )

plot_nlrq_real <- map(plot_nlrq,
    ~imap(.x, ~{ .x %>% 
          delete_layers(.,"StatDensity2d") %>% 
          delete_layers(.,"GeomPoint") +
          geom_density_2d(data=mars_tmp,
              aes(x=.data[[ pred_red_comb_sel[[substr(.y,11,12)]]$Var[1] ]],
                  y=.data[[ pred_red_comb_sel[[substr(.y,11,12)]]$Var[2] ]] ),
              alpha=0.3,color="gray50",bins = 30)  } ) )

pl_brd_rq_nlrq_real <- map2(plot_rq_real,plot_nlrq_real,
  ~ map2(.x,.y, ~ { .x / .y  +
        plot_layout(guides = 'collect',tag_level = 'new',widths = c()) & 
        theme(text=element_text(size=10),
              aspect.ratio=1,
              legend.position = "bottom") 
        } ) %>% 
  wrap_plots(nrow=1,ncol=4,tag_level="new") + #plot_layout(widths = c(.1,50,.1,50)) +
  plot_annotation(title = sprintf("SDM (tau=%g)",taus[taut]),
                  tag_levels = c('A', '1')) & 
  theme()
  )

if(save_plot){
  iwalk(pl_brd_rq_nlrq_real,
    ~ggsave(plot = .x,
         width=12, height=6, dpi=my.dpi, 
         filename=sprintf("%sfig-brd_2d_real_%s.tiff",wdgraph,.y) ) )  }
```

::: panel-tabset
```{r}
#| include: true
#| results: asis
#| fig-cap: "Sets computed with linear model (top row, numbered 1) and non-linear with a? the? Gaussian equation (bottom row, numbered 2), the observed biological data under the model surface are represented by an isometric curve, the data over the model are represented by red stars. Each pair has its own scale to ensure visibility"
#| fig-width: 16
#| fig-height: 8

iwalk(pl_brd_rq_nlrq, 
      ~ {
        cat('#### ', .y, '\n\n')
        print(.x)
        cat('\n\n')
        })
```
:::

::: panel-tabset
```{r}
#| include: true
#| results: asis
#| fig-cap: "Modelled vs observed data plot for RQ2int and RQ2nli SDM. Black line represents the 1:1 ratio"
#| fig-width: 16
#| fig-height: 8

iwalk(pl_po_sdm, 
      ~ {
        cat('#### ', .y, '\n\n')
        print(.x)
        cat('\n\n')
        })
```
:::

::: panel-tabset
```{r}
#| include: true
#| results: asis
#| fig-cap: "Sets computed with linear with interaction (top, numbered 1) and nonlinear with gaussian equation (bottom numbered 2), the contour plot represents the observed HMS data"
#| fig-width: 16
#| fig-height: 8

iwalk(pl_brd_rq_nlrq_real, 
      ~ {
        cat('#### ', .y, '\n\n')
        print(.x)
        cat('\n\n')
        })
```
:::
:::

::: {.content-visible when-format="html"}

#### Interactive 3D SDM visualisation {#sec-sdm_3d}

::: column-page-right
Only RQ2nli SDM were represented, with all quantiles representation :

```{r}
#| include: true
#| layout-ncol: 2

nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11112$all
nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11134$all
nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11137$all
nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11156$all


```

Only the chosen quantile :

```{r}
#| include: true
#| layout-ncol: 2

nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11112$one[[sprintf("%0.3f",tauchoice)]]
nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11134$one[[sprintf("%0.3f",tauchoice)]]
nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11137$one[[sprintf("%0.3f",tauchoice)]]
nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11156$one[[sprintf("%0.3f",tauchoice)]]

```
:::

:::

### Non-linear quantile regression with bifactorial Gaussian equation models

::: column-page-right
Overall, the non-linear model performed better than the linear model, and the density-based models were generally less relevant than models based on biomass. Thus, the RQ2nli for biomass was the only model geographically applied and analysed. Each SDM for the RQ2nli model was applied on the HMS model web over the estuary, for each period  (@sec-map). The suitability index is given per period and area (@sec-suitability) and density plots were drawn for each SDM, focusing on mudflats to facilitate comparison (@sec-densplot).

A.  Daily max current speed \[m.s-1\] and inundation time \[%\]:The channel and north mudflats were the least favourable areas, the south mudflats and offshore were more appropriate, but few locations were really optimum. These locations were in the north of the offshore area, corresponding to Le Havre beach, and Cote Fleurie, which were not known as optimal. The suitability index, which ranged from 0.1 to 0.5 and was generally stable, confirmed that the most suitable areas were the Cote Fleurie followed by the subtidal Octeville and offshore, the two latter being very similar. The suitability of the north median and upstream mudflats improved after 2005, when they became better than the channel. The north upstream mudflat had averages with large confidence interval. Regarding the density plots, the south and north downstream mudflats were subtidal, the south having a lower current speed. The maximum occurrence current speed in this model was 50-60gAFDW/m² for the south, and 35-50gAFDW/m² for the north. Both varied little over time, and the observed quantiles were consistent only with the south mudflat model during the periods 2006-2010 and 2011-2015, the others being either higher or lower. The north median and upstream mudflat had a wider range of immersion times, which was reflected in the results of the model. The model distribution also revealed the bimodal aspect of the current in the north median mudflat.

B.  Daily salinity range and temperature \[°C\]: The salinity part of the model had a noticeable effect on the result of the model, with a clear reduction in biomass in the river and its ETM area. The closer the estuary entrance to the sea, the higher the model, the offshore area having a clear advantage that increased from 2005 on. The suitability index ranged from 0 to 0.8, and with a general increase over time. The three north mudflats underwent a significant increase during the first three periods. Octeville and offshore were dissimilar with respect to this SDM, together with Cote Fleurie, Octeville was the most suitable. The same increase was visible for the four mudflats on the density plots, all of which shifted roughly from 20 to 60gAFDW/m². The profile of all the mudflats mainly appeared to be influenced by the salinity range, the variation in salinity in the period 2000-2005 was clearly the main driver of the changes in profile. There was a very noticeable change in the north downstream and median mudflats from being highly influenced by inputs of fresh water to a more marine environment. The quantiles of observed data were generally lower than the models, but displayed the same temporal trends.

C.  Daily salinity range and bathymetry \[m\]: The optima for this model were clearly located on Cote Fleurie, the south mudflat and the shore of Octeville, results linked to the bathymetry. However, Cote Fleurie is known to host a meagre cockle population. Offshore, a spot was high in the period 1996-1999 caused by dumping material dredged from the channel that was subsequently progressively smoothed. Except in Cote Fleurie, suitability was less than 0.5, the south mudflat being the second best. Apart from the north median and downstream mudflats which increased over the first three periods, the indexes for each area remained steady. The north downstream mudflat became more favourable for cockles over time, linked to the smaller salinity range, and to the bathymetry progressively becoming bimodal. The north median mudflat showed a widening of the results, perhaps due to the reduced salinity range or to the reduction in the very high upper tidal limit in favour of medium intertidal areas.

D.  Mud content \[%\] and bed shear stress \[Pa\]: This model result was very patchy at the scale of the estuary due to the equally patchy distribution of mud. This identified a channel with high biomass potential, which did not agree with expert knowledge. There was also an area with high biomass around the borders of the ETM area offshore which decreased over time, also due to the reduced mud content. Suitability ranged from 0.25 to 0.75, with a complex pattern. The suitability of the channel, offshore and of the north downstream mudflat decreased after 2005, while the suitability of Octeville and the north upstream and median mudflats improved. The heterogeneity of the areas was also visible in the density plots, as each area had wide distribution with some local maxima that were difficult to link to physical descriptors.

```{r}
#| label: prefig-brd_map
#| include: true

tmap_mode("plot") # "plot" "view"

# iwalk(rqdata$tm_mars_rq_gb, ~tmap_save(.x, dpi=my.dpi,
#               filename= sprintf("%sfig-brd_map_rq_%s.tiff",wdgraph,.y) ) )
# iwalk(nlrqdata$tm_mars_rq_gb, ~tmap_save(.x, dpi=my.dpi,
#               filename= sprintf("%sfig-brd_map_nlrq_%s.tiff",wdgraph,.y) )
tm_mars_rq_gb<-rqdata$pl_rq_sel_map %>%
  map2(.,tmp_sdm_comb_sel_l, \(x,y)
    map2(x, y[names(x)],
        ~.x$all + tm_layout(main.title=gsub("\n"," - ",.y$titre))
  ) ) %>%
  map(., ~ tmap_arrange(.x, asp=NA, ncol=1,
            sync = TRUE, outer.margins=0) ) # ; tm_mars_rq_gb$Biomass
tm_mars_nlrq_gb<-nlrqdata$pl_rq_sel_map %>%
  map2(.,tmp_sdm_comb_sel_l, \(x,y)
    map2(x, y[names(x)],
        ~.x$all + tm_layout(main.title=gsub("\n"," - ",.y$titre))
  ) )  %>%
  map(., ~ tmap_arrange(.x, asp=NA, ncol=1,
            sync = TRUE, outer.margins=0) )
# iwalk(tm_mars_nlrq_gb, ~tmap_save(.x, dpi=my.dpi,
#               filename= sprintf("%sfig-brd_map_nlrq_%s.tiff",wdgraph,.y) ) )

tmp<-nlrqdata$pl_rq_sel_map$Biomass$RQ2nli_11112$one$`2015-2019`
tmp$tm_borders$alpha<-1
tmp$tm_borders$lwd<-3
tmp$tm_borders$col<-"white"
tmp$tm_layout$main.title<-""
tmp$tm_layout$legend.outside.size<-0.2
tmp$tm_layout$legend.title.size<-1.2
tmp$tm_layout$legend.text.size<-0.8
tmp
tmap_save(tmp,
  filename= sprintf("%sMap_sdm_example.tiff",wdgraph),
  dpi=my.dpi)

```

#### Application maps {#sec-map}

::: panel-tabset
##### Biomass

```{r}
#| include: true
#| fig-cap: "SDM models applied on the Seine estuary over the five periods."
#| fig-width: 16
#| fig-height: 10

tmap_mode("plot") # "plot" "view"
print(tm_mars_nlrq_gb$Biomass)
# print(nlrqdata$tm_mars_rq_gb$Biomass)

```

##### Density

```{r}
#| include: true
#| fig-cap: "SDM models applied on the Seine estuary over the five periods."
#| fig-width: 16
#| fig-height: 10

tmap_mode("plot") # "plot" "view"
print(tm_mars_nlrq_gb$Density)
# print(nlrqdata$tm_mars_rq_gb$Density)

```
:::

#### Suitability index {#sec-suitability}

```{r}
#| label: prefig-suit_idx

pl_rq_suit_idx_nlrq_brd <- map2(nlrqdata$pl_rq_suit_idx,reponse_l,
  ~{wrap_plots(.x, nrow=1,guides = 'collect') &
    ylim(0,1) &
    plot_annotation(title = sprintf("SDM %s based on %s (tau=%g)",
                                    model_types$analysis[3],.y$whole,tauchoice),
                    tag_levels = c('A')) & 
    guides(colour = guide_legend(nrow = 1)) &
    labs(color="Areas", fill="Areas") &
    theme(aspect.ratio=1,
          # plot.title = element_text(size=10),
          legend.position = "bottom",
          legend.title = element_text(size=10),
          legend.text = element_text(size=10)
          )
  } )

# pl_rq_suit_idx_nlrq_brd$Biomass

if(save_plot){
  iwalk(pl_rq_suit_idx_nlrq_brd,
    ~ggsave(.x, 
           width = 18, height = 6, dpi=my.dpi, 
           filename = sprintf("%sfig-suit_idx_nlrq_brd_%s.tiff",wdgraph,.y) ) )  }

no_areas <- c( 
  "Ilot Oiseaux",
  "Channel", 
  "Cote Fleurie", 
  "OffShore", 
  "Octeville",
  "Bay" )
tmp<-nlrqdata$pl_rq_suit_idx %>% 
  map_depth(.,2,~modify_at(.x,"data",
            ~.x %>% filter(!Zone %in% no_areas)))

tmp <- map2(tmp,reponse_l,
  ~{wrap_plots(.x, nrow=1,guides = 'collect') &
    ylim(0,1) &
    plot_annotation(title = sprintf("SDM %s based on %s (tau=%g)",
                                    model_types$analysis[3],.y$whole,tauchoice),
                    tag_levels = c('A')) & 
    guides(colour = guide_legend(nrow = 1)) &
    labs(color="Areas", fill="Areas") &
    theme(aspect.ratio=1,
          # plot.title = element_text(size=10),
          legend.position = "bottom",
          legend.title = element_text(size=10),
          legend.text = element_text(size=10)
          )
  } ) # ; tmp$Biomass

if(save_plot){
  iwalk(tmp,
    ~ggsave(.x, 
           width = 18, height = 6, dpi=my.dpi, 
           filename = sprintf("%sfig-suit_idx_nlrq_brd_%s_light.tiff",wdgraph,.y) ) )  }

```

::: column-page-right
::: panel-tabset
```{r}
#| include: true
#| results: asis
#| fig-cap: "Suitability index per period and per area for all SDM models with a 95% confidence interval on means."
#| fig-width: 16
#| fig-height: 5

iwalk(pl_rq_suit_idx_nlrq_brd, 
      ~ {
        cat('##### ', .y, '\n\n')
        print(.x)
        cat('\n\n')
        })

```
:::
:::

#### Application density plots {#sec-densplot}

::: panel-tabset
##### Biomass

```{r}
#| include: true
#| fig-cap: "Density plot of the two predictors and the SDM model result in each area and in each period. The dots are the 95th quantile of the observed data."
#| fig-width: 16
#| fig-height: 10

# pl_nlrq_mars_sel_st<- nlrqdata$pl_rq_mars_sel_st_brd$Biomass
pl_nlrq_mars_sel_st<-
  map_depth(nlrqdata$pl_rq_mars_sel_st, 2, ~.x$mod) %>% 
    map2(.,tmp_sdm_comb_sel_l, \(x,y)
      map2(x, y[names(x)],
        ~.x + 
          xlab(gsub("\n"," - ",.y$titre)) ) ) %>% 
  map(., ~wrap_plots(.x) &
    plot_layout(ncol=1) &
    theme(legend.position="none",
          strip.background = element_blank() ) &
    plot_annotation(tag_levels = c('A')) )

pl_nlrq_mars_sel_st$Biomass & 
  xlim(c(0,150))

if(save_plot){
  ggsave(pl_nlrq_mars_sel_st$Biomass &  xlim(c(0,150)) ,
          width=12, height=12, dpi=my.dpi, 
          filename=sprintf("%sfig-mars_st_brd_Biomass.tiff",wdgraph) )  }

```

##### Density

```{r}
#| include: true
#| fig-cap: "Density plot of the two predictors and the SDM model result in each area and in each period. The dots are the 95th quantile of the observed data."
#| fig-width: 16
#| fig-height: 10

# pl_tmp<- nlrqdata$pl_rq_mars_sel_st_brd$Density

pl_nlrq_mars_sel_st$Density &
  xlim(c(0,3500))

if(save_plot){
  ggsave(pl_nlrq_mars_sel_st$Density &  xlim(c(0,3500)), 
          width=12, height=12, dpi=my.dpi,
          filename=sprintf("%sfig-mars_st_brd_Density.tiff",wdgraph) )  }

```
:::
:::

#### Application density plot details

::: column-page-right
The four models result on the estuary regarding Areas and Periods, with the two calculation modes, for both responses.

##### Biomass
```{r}

pl_nlrq_mars_sel_st_all<-
  map_depth(nlrqdata$pl_rq_mars_sel_st, 2, ~.x$all) %>% 
    map2(.,tmp_sdm_comb_sel_l, \(x,y)
      map2(x, y[names(x)],
        ~.x + 
          xlab(gsub("\n"," - ",.y$titre)) ) )


```

::: panel-tabset
```{r}
#| include: true
#| results: asis
#| fig-cap: "Density plot of the two predictors and the SDM model result on each area and period. The dots were the 95th quantile of the observed data."
#| fig-width: 16
#| fig-height: 10

iwalk(pl_nlrq_mars_sel_st_all$Biomass, 
      ~ {
        cat('###### ', .y, '\n\n')
        print(.x)
        cat('\n\n')
        })
```
:::
:::

##### Density

::: column-page-right
::: panel-tabset
```{r}
#| include: true
#| results: asis
#| fig-cap: "Density plot of the two predictors and the SDM model result on each area and period. The dots were the 95th quantile of the observed data."
#| fig-width: 16
#| fig-height: 10

iwalk(pl_nlrq_mars_sel_st_all$Density, 
      ~ {
        cat('###### ', .y, '\n\n')
        print(.x)
        cat('\n\n')
        })

```
:::
:::

<!-- # Final actions and save -->

```{r}
#| label: graphical_abstract

# NB: info on R plotly: https://stackoverflow.com/questions/74206526/adding-a-scene-information-after-a-plot-ly-object-has-been-created
# Final image recommendation width: 1328, height: 531

# list_3d<-list(
#   RQ2nli_11112=nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11112$all,
#   RQ2nli_11134=nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11134$all,
#   # RQ2nli_11137=nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11137$all,
#   # RQ2nli_11156=nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11156$all,
#   RQ2int_11112=rqdata$pl_rq_sel_3d$Biomass$RQ2int_11112$all,
#   RQ2bsp_11112=rqbsdata$pl_rq_sel_3d$Biomass$RQ2bsp_11112$all
#   )
# scene = list(camera = list(eye = list(x = 1.6, y = 1.6, z = 0.25)))
#   # rqdata$pl_rq_sel_3d$Biomass$RQ2int_11112$all %>% 
#   # layout(title="",scene = scene)
# wdth<-1000; hght<-1000
# 
# op <- options() # Save viewer settings (e.g. RStudio viewer pane)
# options(viewer = NULL) # Set viewer to web browser
# # Use web browser to save image
# imap(list_3d, ~.x %>% 
# # rqbsdata$pl_rq_sel_3d$Biomass$RQ2bsp_11112$all %>%
#   layout(title="", scene = scene) %>% 
#   config( toImageButtonOptions = list(
#       format = "svg", filename = sprintf("fig-graph_3d_%s",.y),
#       width = wdth, height = hght )  ) %>%
#   htmlwidgets::onRender(
#   "function(el, x) {
#   var gd = document.getElementById(el.id);
#   Plotly.downloadImage(gd, {format: 'svg', width = wdth, height = hght, filename: 'plot'});
#   }"
#  )  )
# options(viewer = op$viewer) # Restore viewer to old setting (e.g. RStudio)


```



::: column-page-right
```{r}
#| label: finalsave_rdata

rm(save_plot)
rm(list=(ls()[grepl("tmp|^wd", ls())] ))
# rm(list=lsf.str()) # remove all functions
# rm("rqdata","nlrqdata","rqbsdata")
# save(list=(setdiff(ls()[-grepl("rq_", ls())], lsf.str())),
#      file = paste0(rdataout))

beepr::beep(2)

```
:::

# Supplementary data

## Session information

::: {.callout-tip collapse="true"}
## Expand for R Session Info

```{r, echo = FALSE}
#| include: true

library(sessioninfo)
pkg_sesh <- session_info(pkgs = "attached")
quarto_version <- system("quarto --version", intern = TRUE)
pkg_sesh$platform$quarto <- paste(
  system("quarto --version", intern = TRUE),
  "@",
  quarto::quarto_path()
  )
pkg_sesh
```
:::

The Scientific colour map batlow (Crameri 2018) is used in this study to prevent visual distortion of the data and exclusion of readers with colour­vision deficiencies [@crameri2020].

# References {.unnumbered}
