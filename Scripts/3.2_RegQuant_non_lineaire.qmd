---
title: "MELTING POTES PROJECT : SDM-NEO MODELS non Linear Quantile Regression"
author: "Am√©lie Lehuen"
description: "ANALYSIS WITH KOENKER'S QUANTREG PACKAGE"
date: last-modified
editor: source
execute:
  eval: true
  echo: false
  message: false
  warning: false
  output: true
  include: false
editor_options: 
  chunk_output_type: console
---

```{r}
rm(list=ls())

```

# NON LINEAR QUANTILE REGRESSION ANALYSIS WITH KOENKER'S QUANTREG PACKAGE

## Introduction

Non linear quantile regression analysis with Koenker's `quantreg` package

<!-- ## Script preparation -->

### Packages

```{r}
#| label: load-packages

list_packages <-c("beepr", "knitr", "conflicted", 
    # data tidy
    "tidyverse", "data.table" #"broom"
    )
invisible(lapply(list_packages, library, character.only = TRUE))

```

### Working Environment

```{r}
#| label: workenvir

backup<-"C:/Users/lehuen201/Back Up AMLH/Melting Pot/BDD/A_SDM_NEO/"
wdmat <-paste0(backup,"Matrices/") #"Matrices/"
wdgraph <- paste0(backup,"Plots/") #"Plots/"
wdres <- "Results/"
wdGIS <- "SIG/"

flag_calc<-TRUE # to calculate RQ models and mars results and more time-consuming mars summary by period
flag_calc_mars<-FALSE # to calculate VERY time-consuming mars summary by period

```

### Home made functions

```{r}
#| label: functmade

source("Scripts/0.0_SDM_NEO_functions.R")

```

### Graphic charter

```{r}
#| label: graphchart

```

## Load of External data and Basic Variables

### External data

```{r}
#| label: externdata

rdatain <- sprintf("%sCSLN_Mars_BDD.RData",wdmat)
load(rdatain)
load(sprintf("SIG/OSM_extraction.RData"))

```

### Output save binder and Rdata

```{r}
#| label: outfiles

binderout <- sprintf("%sCSLN_BDD.xlsx",wdres)
rdataout  <- sprintf("%sCSLN_Mars_RQnli_BDD",wdmat)
# if exists
load(paste0(rdataout,".RData"))
```

### Basic variables

```{r}
#| label: basicvar

etude <- "CSLN_Mars"
espece <- "CERED"
analysis <- "RQ Nonlinear"
sp <- which(speciesMP$SPCourt == espece)
sai <- which(saison$M_Def == "Year") #Year Winter Summer

type<-list(nli= c("*","nli"))
tauchoice<-0.95
graphfine<-50 # graph resolution for 2D and 3D graphs surfaces

# Gaussian equation with Initial conditions (CI) vector, quantile choice of reponse (heigth of curve)
FactA_CI <- 0.99

CSLN_Mars_spe <- CSLN_Mars %>%
  filter(SPCourt==espece)

wdgraph <- paste0(backup,"Plots/") #"Plots/"
graph_path <- sprintf("%s%s/%s/",wdgraph,espece,analysis)
titleG <- sprintf("%s %s in %s",
                  analysis,speciesMP$Taxon_SNa[sp],saison[sai,2])
```

# SDM Model calculation
## RQ calculation
```{r}
#| label: rq_Mod_calc
if(flag_calc){ # flag_calc=1

  rq_Mod_all <-
    map(reponse_l, \(biolo)
      {map( type, \(typ)
        {map_depth( pred_red_comb,2,
              ~f.rq_nLin(CSLN_Mars_spe,biolo,.x,taus,typ)) } ) } ) %>%
    map_depth(.,3, ~setNames(.x,map(.x,~.$sdmname)) ) %>% # SDM names to list of results
    map_depth(.,2,~list_flatten(.x,name_spec= "{inner}")) %>% # remove x1/x2 level
    map(.,~list_flatten(.x,name_spec= "{inner}")) %>%  # remove typ level
    map_depth(.,3,compact) # suppress trycatch errors
  
  rq_Mod_sel<-map(rq_Mod_all,
        ~keep_at(.,~ grepl(paste0(names(pred_red_comb_sel),"$",collapse="|"),
                           .x)) ) # collect all mod in selection
} # end if flag_calc
```

## Mars calculation of models
```{r}
#| label: rq_Mod_mars
if(flag_calc){ # flag_calc=1

  rq_Mod_mars_all<-
    map_depth(rq_Mod_all,2,
              ~f.rq_Mod_mars_nl(.x,Mars_SDM,taus))
  
  rq_Mod_mars_sel<-
    map_depth(rq_Mod_sel,2,
              ~f.rq_Mod_mars_nl(.x,Mars_SDM,taus))
  
  rq_Mod_mars_all_per<-
    map_depth(rq_Mod_all,2,
              ~f.rq_Mod_mars_nl(.x,Mars_SDM_per,taus))
  
  rq_Mod_mars_sel_per<-
    map_depth(rq_Mod_sel,2,
              ~f.rq_Mod_mars_nl(.x,Mars_SDM_per,taus))
  
  # Suitability index calculation
  # rq_Mod_mars_all <- map2(rq_Mod_mars_all, rq_Mod_all,
  #                     ~map2(.x,.y, ~f.suit_index(.x,.y,taus)) )
  # rq_Mod_mars_all_per <- map2(rq_Mod_mars_all_per, rq_Mod_all,
  #                         ~map2(.x,.y, ~f.suit_index(.x,.y,taus)) )
  
  rq_Mod_mars_sel <- map2(rq_Mod_mars_sel, rq_Mod_sel,
                      ~map2(.x,.y, ~f.suit_index(.x,.y,taus)) )
  rq_Mod_mars_sel_per <- map2(rq_Mod_mars_sel_per, rq_Mod_sel,
                          ~map2(.x,.y, ~f.suit_index(.x,.y,taus)) )
} # end if flag_calc
```

Summary of values by period for mapping (!! can be very long)
```{r}
if(flag_calc){
  save(list=(setdiff(ls()[grep("rq_", ls())], lsf.str())),
       file = paste0(rdataout,".RData")) # save before going heavy
}  
if(flag_calc_mars){
  rq_Mod_mars_sel_per<-
    map_depth(rq_Mod_mars_sel,2,
              ~{ .x %>% 
                 group_by(NINJ,Period) %>% 
                 summarise(across(where(is.numeric),~mean(.x,na.rm=TRUE))) } )
  
  save(list=(setdiff(ls()[grep("rq_", ls())], lsf.str())), 
       file = paste0(rdataout,".RData")) # save once it's done!
} # end if flag_calc
```


# Model graphs
## Summaries graphs
```{r}
#| label: rq_Mod_plot_sum

pl_rq_all_sum<-
  map_depth(rq_Mod_all,2,
            ~f.pl_rq_Mod_sum(.x,titleG))

pl_rq_sel_sum<-
  map_depth(rq_Mod_sel,2,
            ~f.pl_rq_Mod_sum(.x,titleG))

walk(pl_rq_sel_sum,
  ~{iwalk(., ~ggsave(sprintf("%s/%s/%s_%s_sm.tiff",
                    graph_path, substr(.y,1,6), espece, .y),
                    plot = .x,
                    width = 10, height = 7, dpi=400) ) } )
```

## AIC plot
```{r}
#| label: rq_Mod_plot_aic

rq_Mod_all_sm<-
  rq_Mod_all %>% 
    map_depth(.,2, ~map_dfr(.$smrq_t, ~.) ) %>% 
    map(., ~map_dfr(., ~.) ) %>% 
    map_dfr(., ~.) %>% 
  mutate(Delta_AICc= AICc-min(AICc,na.rm=TRUE))

rq_Mod_sel_sm<-
  rq_Mod_sel %>% 
    map_depth(.,2, ~map_dfr(.$smrq_t, ~.) ) %>% 
    map(., ~map_dfr(., ~.) ) %>% 
    map_dfr(., ~.) %>% 
  mutate(Delta_AICc= AICc-min(AICc,na.rm=TRUE))

pl_rq_sel_aic<- rq_Mod_sel_sm %>%
  filter(!grepl(c("RQ3"),sdmname)) %>%
  f.pl_rq_Mod_aic(.,titleG)
ggsave(sprintf("%s%s_RQ_AIC_all_scores.tiff",
                 graph_path,espece),
         plot = pl_rq_sel_aic,
         width = 16, height = 8, dpi=400)

pl_rq_aic<-rq_Mod_sel_sm %>% 
  filter(!grepl(c("RQ3"),sdmname)) %>%
  mutate(nbvar=substr(typetxt,1,3)) %>% 
  group_by(tau) %>%
  ggplot(aes(x=reponse, #reorder(factors,-AICc),
             y=Delta_AICc,
             color = factor(tau),
             shape = type))+
  geom_point(size= 5) +
  facet_grid(nbvar~.) +
  scale_shape_manual(values=c(1, 8))+
  scale_color_manual(values=colRQ) +
  labs(#title=titleG, 
       x="Biologic",y="AIC",
       color="Quantile",shape="Type") +
  theme(axis.text = element_text(size=10,face="bold"),
          strip.background = element_blank()) +
  coord_flip()
ggsave(sprintf("%s%s_RQ_AIC_scores.tiff",
                 graph_path,espece),
         plot = pl_rq_aic,
         width = 16, height = 8, dpi=400)

```


## Validation pred/obs plot
```{r}
#| label: prefig-poplot_boot

# pl_rq_po_sel<-map_depth(rq_Mod_sel,2,
#     ~ {.x %>% rq_po_plot} )

pl_rq_po_sel<-map_depth(rq_Mod_sel,2,
    ~ {.x %>% f.rq_po_plot_boot} )

walk(pl_rq_po_sel,
  ~{iwalk(., ~ggsave(sprintf("%s/%s/%s_%s_po.tiff",
                    graph_path, substr(.y,1,6), espece, .y),
                    plot = .x,
                    width = 5, height = 8, dpi=400) ) } )

```

## Qqplots Residuals graphs
```{r}
#| label: rq_Mod_plot_res

# pl_rq_sel_res<-
#   map_depth(rq_Mod_sel,2,
#          ~f.pl_rq_Mod_res(.x,titleG)) 
# 
# pl_rq_sel_resb<-map(pl_rq_sel_res,
#           ~{wrap_plots(., guides="collect") &
#               plot_annotation(title=titleG,tag_levels = c('A')) &
#               theme(plot.title = element_blank(),
#                     plot.subtitle = element_text(size=12))   } )
# 
# iwalk(pl_rq_sel_resb,
#   ~{ggsave(sprintf("%s/%s_residuals.tiff",
#                    graph_path,.y),
#      plot = .x, width = 18, height = 12, dpi=400) } )

```

## Curves 1D sdm plots
```{r}
#| label: rq_Mod_plot_1d

pl_rq_all_1d <- rq_Mod_all %>% 
    map(.,~keep_at(.x,grepl("0$",names(.x))) ) %>% 
    map_depth(.,2,~f.pl_rq_Mod_1d(.x,titleG) )

pl_rq_all_1d$all <- map(pl_rq_all_1d,
        ~{(wrap_plots(.) &
             labs(title=element_blank()) &
             theme(legend.position="bottom",
                   plot.title = element_text(hjust = 0.5)) ) +
          plot_layout(guides="collect") +
          plot_annotation(title=titleG) } )

walk(pl_rq_all_1d["all"],
  ~{iwalk(., ~ggsave(sprintf("%s/RQ1nli/%s_%s_1d.tiff",
                    graph_path, espece, .y),
                    plot = .x,
                    width = 10, height = 7, dpi=400) ) } )

```

## Raster 2D sdm plots
```{r}
#| label: rq_Mod_plot_2d

pl_rq_all_2d<- rq_Mod_all %>%
    map(.,~keep_at(.x,grepl("^RQ2",names(.x))) ) %>%
    map_depth(.,2,~f.pl_rq_Mod_2d(.x,taus_l,titleG) )

pl_rq_sel_2d<- rq_Mod_sel %>% 
    map(.,~keep_at(.x,grepl("^RQ2",names(.x))) ) %>% 
    map_depth(.,2,~f.pl_rq_Mod_2d(.x,taus_l,titleG) )

walk(pl_rq_sel_2d,
   ~{iwalk(., ~ggsave(sprintf("%s/%s/%s_%s_2d.tiff",
              graph_path, substr(.y,1,6), espece, .y),
              plot = .x$all,
              width = 10, height = 7, dpi=400) ) } )

```

## Surfaces 3D sdm plots
```{r}
#| label: rq_Mod_plot_3d

# pl_rq_all_3d<- rq_Mod_sel %>% 
#     map(.,~keep_at(.x,grepl("^RQ2",names(.x))) ) %>% 
#     map_depth(.,2,~pl_rq_Mod_3d(.x,taus_l,titleG) )

pl_rq_sel_3d<- rq_Mod_sel %>% 
    map(.,~keep_at(.x,grepl("^RQ2",names(.x))) ) %>% 
    map_depth(.,2,~f.pl_rq_Mod_3d(.x,taus_l,titleG) )

walk(pl_rq_sel_3d,
  ~{iwalk(., ~ saveWidget(partial_bundle(.x$all),
                          sprintf("%s/%s/%s_%s_3d.html",
                    graph_path, substr(.y,1,6), espece, .y), 
                    selfcontained = F, libdir = "lib") ) } )
```

# GIS results

## Mars SDM stats

```{r}
#| label: rq_Mod_mars_stat

# pl_rq_mars_all_st<-
#   map(reponse_l, \(biolo)
#       {map2(rq_Mod_mars_all[[biolo$rdescr]],
#             rq_Mod_all[[biolo$rdescr]],
#            ~st_rq_Mod_map(.x,.y,tauchoice)) } )

pl_rq_mars_sel_st <-
  map2(rq_Mod_mars_sel_per,
       rq_Mod_sel,
    ~map2(.x,.y,
     ~f.st_rq_Mod_map(.x,.y,tauchoice)) ) 

walk(pl_rq_mars_sel_st,
  ~{iwalk(., ~ggsave(sprintf("%s/%s/%s_%s_mars_st.tiff",
                    graph_path, substr(.y,1,6), espece, .y),
                    plot = .x$all,
                    width = 15, height = 10, dpi=400) ) } )

pl_rq_mars_sel_st_board<-
  map_depth(pl_rq_mars_sel_st, 2, ~.x$mod) %>% 
  map(., ~wrap_plots(.x) &
    plot_layout(ncol=1) &
    theme(legend.position="none",
        strip.background = element_blank(),
        text=element_text(size=12)) &
    plot_annotation(tag_levels = c('A')) )

iwalk(pl_rq_mars_sel_st_board,
      ~ggsave(sprintf("%s/%s_mars_st_board_%s.tiff",
                  graph_path, espece, .y),
                  plot = .x,
                  width = 12, height = 12, dpi=400) )

```

## Shapefile save
```{r}
# st_write(rq_Mod_mars_sel_per, sprintf("%sLayers made/SDM_NEO_RQ_%s.shp",wdGIS,espece),append=FALSE)
```

## Maps plots
```{r}
#| label: rq_Mod_plot_map

# option tmap version facet
tmap_mode("plot") # "plot" "view"

# pl_rq_all_map<-
#   map(reponse_l, \(biolo)
#     {map2(rq_Mod_mars_all[[biolo$rdescr]],rq_Mod_sel[[biolo$rdescr]],
#          ~pl_rq_Mod_map(.x,.y,tauchoice)) } )

pl_rq_sel_map <-
  map2(rq_Mod_mars_sel_per,
       rq_Mod_sel,
    ~map2(.x,.y,
     ~f.pl_rq_Mod_map(.x,.y,tauchoice)) )

walk(pl_rq_sel_map,
     ~iwalk(., ~tmap_save(.x$all, dpi=400, height=2, asp=0, #width=20,
                          filename=sprintf("%s/%s/%s_%s_map.tiff",
                              graph_path, substr(.y,1,6), espece, .y) ) ) )

# Change the span of color scale to compare sdm between them
max_map<-map(rq_Mod_mars_sel, ~{ # nlrqdata$
  map_dbl(.x, ~max(
    f.replace_outliers(.x[[sprintf("t%.3f",tauchoice)]]),na.rm=TRUE) ) %>% 
  max(., na.rm=TRUE) %>% round(.,-1) } )

pl_rq_sel_map<-map2(pl_rq_sel_map,max_map, \(x,y) # nlrqdata$
      map(x,
        ~modify_at(.x, "all",
          ~modify_at(.x, "tm_fill",
            ~modify_at(.x, "breaks", ~seq(0,y, length.out=5) ) #by=ifelse(y<1000,50,500)
            ) ) ) )

tm_mars_rq_gb <- map(pl_rq_sel_map,
  ~{ map(., ~ .x$all) %>%
    tmap_arrange(., asp=NA, ncol=1,
                 sync = TRUE, outer.margins=0) } )

```

## Suitability index plots

```{r}

pl_rq_suit_idx <- map2(rq_Mod_mars_sel,
                    rq_Mod_sel,
                  ~map2(.x,.y, f.pl_suit_idx )  )
```

## Animated GIF Maps plots
```{r}
#| label: rq_Mod_plot_map_gif

# pl_rq_all_map<-
#   map(reponse_l, \(biolo)
#     {imap(rq_Mod_mars_all[[biolo$rdescr]],
#          ~f.pl_rq_Mod_map_gif(.x,.y,tauchoice)) } )

# pl_rq_sel_map<-
#   map(reponse_l, \(biolo)
#     {imap(rq_Mod_mars_sel_per[[biolo$rdescr]],
#          ~f.pl_rq_Mod_map_gif(.x,.y,tauchoice)) } )

```

# Final actions and save

Rdata are saved in `rdataout`. An excel file collects data in `r binderout` , with sheets for :

-   data : contains whatever

```{r}
#| label: finalsave_xls
# wb <- loadWorkbook(binderout) # addWorksheet(wb, sheetName = "rql")
# writeData(wb, sheet = "Rq_coeff", x = smrq_l, 
#           startCol = 1, startRow = 1,withFilter = FALSE)
# saveWorkbook(wb,file=binderout, overwrite = TRUE)

```

```{r}
#| label: finalsave_r

# rm(list=lsf.str()) # remove all functions
rm(list=(ls()[grepl("tmp", ls())] ))
save(list=(setdiff(ls()[grep("rq_", ls())], lsf.str())), # select only variables that respect pattern, remove functions
     file = paste0(rdataout,".RData"))
beepr::beep(2)
```

# Supplementary data

## Session information

::: {.callout-tip collapse="true"}
## Expand for R Session Info

```{r, echo = FALSE}
#| include: true

library(sessioninfo)
pkg_sesh <- session_info(pkgs = "attached")
quarto_version <- system("quarto --version", intern = TRUE)
pkg_sesh$platform$quarto <- paste(
  system("quarto --version", intern = TRUE),
  "@",
  quarto::quarto_path()
  )
pkg_sesh
```
:::

# References {.unnumbered}
