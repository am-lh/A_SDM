---
title: "NEO Workshop"
author: "Am√©lie Lehuen"
description: "add info on script"
date: "`r format(Sys.time(), '%d %B %Y')`"
editor: source
execute:
  eval: true
  echo: false
  message: false
  warning: false
  output: true
  include: false
editor_options: 
  chunk_output_type: console
---

::: column-page-right
# Introduction

```{r}
#| label: load-packages
#| code-summary: "Packages"

library(knitr)
library(readxl) ; library(openxlsx)
library(beepr); library(clipr)
library(tidyverse); library(data.table)
library(broom); library(purrr) # tidy,glance,augment
library(lubridate)
library(rstatix); library(Hmisc)  # corr and pvalue calculation

# SIG
library(sf); library(sfheaders)
library(rnaturalearth) # library(raster)
library(tmap)
library(tmaptools) # tmap_mode; for static and interactive maps

# Graphics packages
library(scales); library(grafify)
library(RColorBrewer)
library(ggpubr); library(ggridges)
library(GGally)
library(plotly)
library(ggdist)
library(introdataviz) # geom_split_violin # devtools::install_github("psyteachr/introdataviz")

sf_use_s2(FALSE)
tmap_mode("view") # "plot" "view"
Sys.setlocale("LC_TIME", "English")

conflict_prefer("transpose", "purrr")
conflict_prefer("filter", "dplyr")
conflict_prefer("select", "dplyr")
conflict_prefer("summarise", "dplyr")
conflict_prefer("melt", "reshape2")
conflict_prefer("layout", "plotly")

```

```{r}
#| label: workenvir

rm(list=ls())

wdsource <- "Data/Schelde/"
wdres <- "Results/"
wdmat <- "Matrices/"
wdgraph <- "C:/Users/lehuen201/Back Up AMLH/Melting Potes/BDD/A_SDM_NEO/Plots/" #"Plots/"
wdGIS <- "SIG/"
wdproj<-getwd()

pc <- "C:/Users/lehuen201/Nextcloud/" # "E:/" #
wdscript <- paste(pc,"Melting Pot/BDD/Scripts/",sep="")
wdmsr <- (paste(wdscript,"MSR/MSR.R",sep=""))

# flag_calc_mars<-FALSE # to calculate time-consuming mars summary by period

```

```{r}
#| label: graphchart

```

The aim of the workshop is to...

:::

# SNOs datasets

::: column-page-right

<!-- Basic variables -->

```{r}
#| label: basicvar

name_bases <- c("Abiotic","RASTER","Taxa")

season_levels <- c("spr","sum","aut","win")

```

<!-- Output binder and data -->

```{r}
#| label: outfiles

binderout <- sprintf("%sSchl_BDD.xlsx",wdres)
rdataout  <- sprintf("%sSchl_BDD",wdmat)
# if exists
# load(paste0(rdataout,".Rdata"))
```

<!-- Home made functions -->

```{r}
#| label: functmade

loadRData <- function(fileName){
#loads an RData file, and returns it
    load(fileName)
    mget(ls()[ls() != "fileName"])
}

```

All data treatment has been conducted with `r R.version.string` (Details available in Supplementary Data). Significance levels are tagged for p \< .0001 with "\*\*\*\*", p \< .001 with "\*\*\*", p \< .01 with "\*\*", p \< .05 with "\*".

:::

## HMS

::: column-page-right

```{r}
#| label: hms_load

name_base <- "Abiotic"

# if (refresh_SNO){
  name_file<-c("Measured_d50","Oosterschelde_total","Wadden_total","Westerschelde_total") 
  name_df<-c("ab_d50","ab_oos","ab_wad","ab_wes") 
  
  ab_set_raw <- lapply(sprintf("%s%s/%s.csv",
            wdsource,name_base,name_file),
            read_csv)
  
  ab_set <- ab_set_raw %>%
    setNames(name_df) %>% 
    imap(., ~ .x %>%
      setNames(c("station",names(.x)[-1])) %>% 
      as.data.frame() %>%
      rename(#depth=Depth,
             longitude=x,
             latitude=y) %>%
      mutate(bdd_base = name_base,
             bdd_table= .y) %>%
      separate_wider_delim(station, ".", cols_remove = FALSE,
                           names = c("ProjectName","Basin","Year","Season","SampleID")) %>%
      mutate(across(any_of(c("Year","SampleID")),as.numeric ) ) %>% 
      relocate(bdd_base,bdd_table) )
  
  ab_set <- ab_set %>%
    map(., ~ .x  %>%
      mutate(station=ifelse(Season=="2K", "spr", Season)) %>%
      mutate(station=ifelse(Season=="4K", "aut", Season))  )
  
 ab_sf <- map(ab_set,
             ~ st_as_sf(.x %>%
                  drop_na(longitude,latitude),
                  coords=c("longitude","latitude"),
                    crs=4326,remove = FALSE)  )
  
  ab_coord <- ab_sf %>% lapply( . %>%
    select(c("bdd_base","bdd_table","SampleID","longitude","latitude")) %>%
    summarise(base::unique(.))) %>%
    bind_rows() %>%
    as.data.frame(.) %>%
    mutate("TRUE" = TRUE) %>%
    pivot_wider(names_from = bdd_table,
                values_from = "TRUE", values_fill = FALSE) %>%
    st_as_sf()
  
  ab_set <- ab_set %>%
    map(., ~.x  %>%
      mutate(across(c("ProjectName","Basin","SampleID"), as.factor)) %>% 
      mutate(Season=factor(Season,season_levels,ordered = TRUE)) )
  
  sch_set$ab<-ab_set
  sch_coord$ab<-ab_coord

  save(list=(ls(pattern="^ab.*")),file = sprintf("%s_ab.RData",rdataout))
# } else {
#   # load(file = sprintf("%s_ab.RData",rdataout))
# }
```

:::