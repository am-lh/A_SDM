---
title: "MELTING POTES"
author: "Am√©lie Lehuen"
description: "Task A : SDM-NEO Data analysis"
date: "`r format(Sys.time(), '%d %B %Y')`"
editor: source
execute:
  eval: true
  echo: false
  message: false
  warning: false
  output: true
  include: false
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: load-packages
#| code-summary: "Packages"

library(conflicted)
library(knitr)
library(readxl) ; library(openxlsx)
library(beepr); library(clipr)
library(tidyverse); library(data.table)
library(broom); library(purrr) # tidy,glance,augment
library(lubridate)
library(rstatix); library(Hmisc)  # corr and pvalue calculation

# SIG
library(sf); library(sfheaders)
library(rnaturalearth) # library(raster)
library(tmap)
library(tmaptools) # tmap_mode; for static and interactive maps
library(ggspatial)

# Graphics packages
library(scales) ; library(grafify)
library(RColorBrewer) ; library(wesanderson); library(colorspace)
library(ggpubr);library(GGally); library(gginnards)
library(patchwork); library(figpatch)
library(metR)
library(rayshader)
library(introdataviz) # geom_split_violin # devtools::install_github("psyteachr/introdataviz")
library(ggridges) # geom_density_ridges
library(ggforce)
library(plotly)

conflict_prefer("transpose", "purrr")
conflict_prefer("filter", "dplyr")
conflict_prefer("select", "dplyr")
conflict_prefer("summarise", "dplyr")
conflict_prefer("melt", "reshape2")
conflict_prefer("layout", "plotly")

sf_use_s2(FALSE)
tmap_mode("view") # "plot" "view"
Sys.setlocale("LC_TIME", "English")
```

# Introduction

```{r}
#| label: workenvir

rm(list=ls())
wdsource <- "Data/Faune/CSLN/"
wdmat <- "Matrices/"
wdgraph <- "Plots/"
wdres <- "Results/"

pc <- "C:/Users/lehuen201/Nextcloud/" # "E:/" #
wdGIS <- paste(pc,"Melting Pot/SIG/",sep="");
wdscript <- paste(pc,"Melting Pot/BDD/Scripts/",sep="")
wdmsr <- (paste(wdscript,"MSR/MSR.R",sep=""))

```

```{r}
#| label: graphchart

theme_set(theme_bw(base_size = 14))
colDarj <- function(x) {wes_palette("Darjeeling2",x, type = "continuous")}
colZiss <- function(x) {wes_palette("Zissou1",x, type = "continuous")}
colSpec <- colorRampPalette(brewer.pal(8, "Spectral")); # show_col(colSpec(2))
colDark <- colorRampPalette(brewer.pal(8, "Dark2"));
Scale_col <- function(x) {scale_colour_manual(values=colDarj(x))}
Scale_fill <- function(x) {scale_fill_manual(values=colDarj(x))}
Scale_brew <- function() {scale_colour_brewer(palette="Spectral",aesthetics=c("colour","fill"))}
Scale_co <- function() 
  {scale_colour_manual(palette=colorRampPalette(brewer.pal(11, "Spectral")))}
Scale_fi <- function() 
  {scale_fill_manual(palette=colorRampPalette(brewer.pal(11, "Spectral")))}


pal_cspx <- function(x) {divergingx_hcl(x,palette = "Zissou 1")};
colBin<-c(pal_cspx(6)[3],pal_cspx(6)[5]); 
colRQ<-pal_cspx(4); blank<-alpha("#dae8ed",0.1); # show_col(colBin)
Scalc_rq<- function() {scale_colour_manual(values=colRQ)}
Scalf_rq2d <- function() {scale_fill_gradientn(colours=colRQ)} 

```

```{r}
#| label: func

loadRData <- function(fileName){
#loads an RData file, and returns it
    load(here::here(fileName))
    mget(ls()[ls() != "fileName"])
}

# Function for corr ad pvalue table x is a matrix containing the data
# method : correlation method. "pearson"" or "spearman"" is supported
# removeTriangle : remove upper or lower triangle
# results :  if "html" or "latex"
# the results will be displayed in html or latex format
corstars <-function(x, method=c("pearson", "spearman"), 
                    removeTriangle=c("upper", "lower"),
                     result=c("none", "html", "latex")){
    #Compute correlation matrix
    require(Hmisc)
    x <- as.matrix(x)
    correlation_matrix<-rcorr(x, type=method[1])
    R <- correlation_matrix$r # Matrix of correlation coeficients
    p <- correlation_matrix$P # Matrix of p-value 
    
    ## Define notions for significance levels; spacing is important.
    mystars <- ifelse(p < .0001, "****", 
                      ifelse(p < .001, "***", 
                             ifelse(p < .01, "**", 
                                    ifelse(p < .05, "*", " "))))
    
    ## trunctuate the correlation matrix to two decimal
    R <- format(round(cbind(rep(-1.11, ncol(x)), R), 2))[,-1]
    
    ## build a new matrix that includes the correlations with their apropriate stars
    Rnew <- matrix(paste(R, mystars, sep=""), ncol=ncol(x))
    diag(Rnew) <- paste(diag(R), " ", sep="")
    rownames(Rnew) <- colnames(x)
    colnames(Rnew) <- paste(colnames(x), "", sep="")
    
    ## remove upper/lower triangle of correlation matrix
    if(removeTriangle[1]=="upper"){
      Rnew <- as.matrix(Rnew)
      Rnew[upper.tri(Rnew, diag = TRUE)] <- ""
    }
    else if(removeTriangle[1]=="lower"){
      Rnew <- as.matrix(Rnew)
      Rnew[lower.tri(Rnew, diag = TRUE)] <- ""
    }
    
    ## remove last column and return the correlation matrix
    Rnew <- as.data.frame(Rnew)
    Rnew <- cbind(Rnew[1:length(Rnew)-1])
    if (result[1]=="none") return(Rnew)
    else{
      if(result[1]=="html") print(xtable(Rnew), type="html")
      else print(xtable(Rnew), type="latex") 
    }
} 

replace_outliers <- function(x, coefv=1.5) {
  replace(x, x %in% boxplot.stats(x, coef = coefv)$out, NA) #mean(x)
}

```

```{r}
#| label: externdata

rdatain  <- sprintf("%sCSLN_Mars_RQ_BDD.RData",wdmat)
rqdata<-loadRData(rdatain)
rdatain  <- sprintf("%sCSLN_Mars_RQnli_BDD.RData",wdmat)
nlrqdata<-loadRData(rdatain)
rdatain  <- sprintf("%sCSLN_Mars_RQbsp_BDD.RData",wdmat)
rqbsdata<-loadRData(rdatain)
rdatain  <- sprintf("%sCSLN_Mars_BDD.RData",wdmat)
load(rdatain) #load(here::here(rdatain))
rdatain  <- sprintf("%sCSLN_Mars_plot.RData",wdmat)
load(rdatain)
load(sprintf("SIG/OSM_extraction.RData"))

```

```{r}
#| label: outfiles
rdataout  <- sprintf("%sA_SDM_NEO_Results.RData",wdmat)
# if exists
# load(rdataout)

wdgraph <- "Plots/" # rerun it because of loads
```

```{r}
#| label: basicvar

etude <- "CSLN_Mars"
espece <- "CERED"
sp <- which(speciesMP$SPCourt == espece)
sai <- which(saison$M_Def == "Year")
taut <- which(taus %in% c(tauchoice))

# rqname<- matrix(paste0(model_types$code[1],"_",sdm_comb_sel$type),nrow=4,ncol=2)

factors<-predict # %>% filter(Var %in% Var_choosen)
```

# Materials and Methods

::: column-page-right
All data treatment were conducted with `r R.version.string` except for MARS3D pre-treatment on Matlab 2019a. Significance levels are tagged for p \< .0001 with "\*\*\*\*", p \< .001 with "\*\*\*", p \< .01 with "\*\*", p \< .05 with "\*".
:::

## Study area

::: column-page-right
The Seine estuary was studied regarding several historically known areas that have either habitat or communities differences. These areas are mainly mudflats and subtidal areas (@fig-map).

```{r}
#| label: fig-map
#| include: true
#| fig-cap: "Maps of habitats areas defined in the study area. Dots represent the location of the biological samples"

tmap_mode("view") # "plot" "view"
tm_study_map_html

ggsave(tm_study_map, 
          filename= sprintf("%sfig-map.tiff",wdgraph), 
       dpi=600, width = 10,  height = 7)
```
:::

## Biological model

## Datasets

### Biologic data

::: column-page-right
```{r}
#| label: biostats_1

rawnb <-count(CSLN_raw) %>%
  pull() %>% 
  formatC(., format="f", big.mark=",", digits=0)
cleannb <-count(CSLN) %>% 
  pull() %>% 
  formatC(., format="f", big.mark=",", digits=0)
yearsrange <- CSLN %>% 
  mutate(Annee = as.numeric(levels(Annee))[Annee]) %>% # reconvert factors
  arrange(Annee) %>% 
  slice(c(1,n())) %>% 
  pull(Annee) %>%
  paste(collapse = " to ")
moisyear <- CSLN %>% group_by(Annee,Station_originelle) %>% 
  summarise(nbcamp=n_distinct(Mois)) %>% 
  group_by(nbcamp) %>%
  summarise(nbstat=n_distinct(Station_originelle)) %>% 
  arrange(desc(nbstat)) %>%
  slice(1:2) %>% #slice(c(1,n())) %>%
  pull(nbcamp) %>%
  paste(collapse = " to ")
nbstattot <- CSLN %>% 
  summarise(n_distinct(Station_originelle)) %>% 
  pull()
nbstatyr <- CSLN %>% group_by(Annee) %>% 
  summarise(nbstat=n_distinct(Station_originelle)) %>%
  summarise(nbstat=round(mean(nbstat),0)) %>% 
  pull()
period <- CSLN %>% group_by(Mois) %>% 
  mutate(Mois = month.abb[as.numeric(levels(Mois))[Mois]]) %>%
  summarise(nbstat=n_distinct(Station_originelle)) %>%
  arrange(desc(nbstat)) %>% 
  slice(1:3) %>% 
  pull(Mois) %>% 
  paste(collapse = ", ")
recbef2000 <- CSLN_Mars %>% 
  filter(!Zone  %in% c("Channel","Bay")) %>% # at minimum
  filter(Period == "1996-1999") %>%
  filter(!SPCourt %in% c("SEMBA","AMPIM","AUSMO",
                         "BALCR","MYTED","BIVAL","ANNEL")) %>%
  # filter(SPCourt %in% c(espece)) %>% 
  # summarise(n_distinct(idStationUnique)) %>% 
  count() %>% 
  pull()
richspe <- CSLN %>% 
  summarise(nbstat=n_distinct(Taxon_SNa)) %>% 
  pull()

```

The raw data (n= `r rawnb`) was harmonised and grouped to obtain a single database of `r cleannb` observations, and `r nbstattot` sampling stations in total (with some variation in coordinates from year to year), with an average of `r nbstatyr` stations per campaign, occurred mainly in the months of `r period`. Along all the period covered by the dataset, from `r yearsrange` (before 2000 was discarded, too few observations n=`r recbef2000`), with `r moisyear` sampling campaigns per year, a series of 5-years periods was defined, 2000-2005 (the building of 'Port 2000' with high disruption in the estuary area); 2006-2010; 2011-2015; 2016-2019. `r richspe` different species was founded in all the observations.
:::

### HMS data

::: column-page-right
```{r}
#| label: abiostats_1

marsweb <- Mars_csv %>% 
  summarise(nbstat=n_distinct(NINJ)) %>% 
  pull() %>% 
  formatC(., format="f", big.mark=",", digits=0)
marsxy <- Mars_csv %>% select(NINJ) %>% 
  separate(NINJ, c("Y", "X"),sep="_") %>%
  mutate(X=as.numeric(X), Y=as.numeric(Y)) %>% 
  summarise(across(.cols=everything(),~(max(.x)-min(.x)))) %>% # sapply(., max)
  unite(fus,Y,X,sep=" by ") %>%
  pull(fus)
marslonlat <- Mars_csv %>% 
  select(Lon,Lat) %>%
  summarise(across(.cols=everything(),
                   ~(sprintf("%g to %g",
                             round(min(.x),4),
                             round(max(.x),4))))) %>%
  unite(fus,Lon,Lat,sep=" and Latitude ") %>%
  pull(fus)
  
marsmaillenb <-CSLN_Mars %>% 
  select(NINJ) %>% 
  drop_na() %>% 
  summarise(nbstat=n_distinct(NINJ)) %>% 
  pull() %>% 
  formatC(., format="f", big.mark=",", digits=0)
marsmailledet <- CSLN_Mars %>% 
  select(NINJ,Tidal_level) %>% 
  drop_na() %>% 
  group_by(Tidal_level) %>% 
  summarise(nbstat=n_distinct(NINJ)) %>% 
  unite(Tidalnb,Tidal_level,nbstat,sep=" (n= ") %>% 
  pull() %>% 
  paste(collapse = "), ")
#  add tidelevels in the marsmailledet et garder l'ordre qui va bien!!

nbmailzone<- Mars_SDM_per %>%
  select(Zone, NINJ) %>% 
  distinct() %>% 
  group_by(Zone) %>%
  summarize(n=n()) %>% 
  unite(nbzone, Zone, n, sep= ": n= ") %>% 
  paste(collapse = ", ") 

```

All Seine Bay MARS3D model is calculated in a grid of `r formatC(700*112, format="f", big.mark=",", digits=0)` mesh (700 by 112), focused on the Seine Estuary with a grid of 'only' `r marsweb` mesh (`r marsxy`), with the coordinates of Longitude `r marslonlat`. Each area defined regroup several mesh (`r nbmailzone`). Mars mesh corresponding to the stations localisation in the biologic dataset are at total `r marsmaillenb` with the distinction in the position in the tidal area as `r marsmailledet`). <!-- upper intertidal (0-25% immersion time, n= 48), medium intertidal (25-75% immersion time, n= 41), lower intertidal (75-100% immersion time, n= 93), Subtidal (n= 19). -->
:::

### Predictors calculation and selection

::: column-page-right
```{r}
#| label: globcorr

df <- CSLN_mud %>% 
  filter(SPCourt == espece) %>%
  select(paste(factors[,1],saison[sai,1],sep=""),
         map(reponse_l,~.x$rvar) %>% unlist(., use.names=FALSE) )

dfcornew <- corstars(df, result="none",removeTriangle="") %>% 
  mutate(variable=rownames(.)) %>% 
  relocate(variable)
# dftest<-dfcornew %>% mutate(across(.cols = everything(), str_replace_all, ".*\\s", ""))

```

All variables were observed and a correlation study was conducted to select the more pertinent factors and avoid autocorrelation between factors (@fig-mars_corr). All environment factors are the result of the annual mean of model variables.

-   **Current speed daily max** \[`r factors[2,3]`\] is chosen over Current_speed \[`r factors[1,3]`\] to reflect hydrodynamics occurring on mudflats due to tidal rhythm (Corr = `r dfcornew %>% filter(variable %in% "flow_mxd") %>% select(flow_m) %>% pull()`).
-   **Inundation time** \[`r factors[3,3]`\] usually used to reflect the tidal position of benthic organisms.
-   **Salinity daily range** \[`r factors[5,3]`\] is preferred to salinity \[`r factors[4,3]`\] to emphasize more the tidal influence (Corr = `r dfcornew %>% filter(variable %in% "sal_dtd") %>% select(sal_m) %>% pull()`).
-   **Temperature** \[`r factors[6,3]`\] is picked upon temperature daily range \[`r factors[7,3]`\] for its accessibility (Corr = `r dfcornew %>% filter(variable %in% "temp_dtd") %>% select(temp_m) %>% pull()`) and the range being reflected by the inundation time (Corr = `r dfcornew %>% filter(variable %in% "temp_dtd") %>% select(inunt) %>% pull()`).
-   **Mud content** \[`r factors[14,3]`\] is chosen over sediment total conc \[`r factors[13,3]`\] to link with other references (Corr = `r dfcornew %>% filter(variable %in% "mudrate_m") %>% select(Csed_m) %>% pull()`).
-   **Bed shear stress daily max** \[`r factors[12,3]`\] is poorly correlated to bed shear stress \[`r factors[11,3]`\] (Corr = `r dfcornew %>% filter(variable %in% "tenfon_mxd") %>% select(tenfon_m) %>% pull()`) but the former is preferred to indicate the extreme local conditions that can lead to erosion of sediment.
-   **True bathymetry** \[`r factors[9,3]`\] is correlated to a lot of factors, but poorly to salinity daily range (Corr = `r dfcornew %>% filter(variable %in% "sal_dtd") %>% select(bathy) %>% pull()`). It is kept for its wide accessibility in any estuary.
-   MES mud \[`r factors[8,3]`\] is not selected to focus on benthic erosion phenomena more than maximal turbidity zone (MTZ) processes even though it is not correlated to a lot of factors.

There was no correlation between biological variables (biomass and density) and all environmental factors. Despite the high level of correlation and significance between biomass and density (Corr = `r dfcornew %>% filter(variable %in% "Density_indm2") %>% select(Biomass_gAFDWm2) %>% pull()`), both factors were not fully redundant, and analysed in parallel.

```{r}
#| label: fig-mars_corr
#| include: true
#| fig-cap: "Correlation plot of all variables extracted from MARS3D dataset corresponding to biomass and densities from biological dataset. The upper triangle displays the correlation score, the lower a scatter plot with a linear regression, and the diagonal the density plot of each variable." 
#| fig-width: 14
#| fig-height: 10

pl_mars_corr

ggsave(sprintf("%sfig-mars_corr.tiff",wdgraph),
       plot = pl_mars_corr, width = 16, height = 9, dpi=600)

```
:::

## Models adjustments

### Quantile regression

::: column-page-right
For each couple, the three model types are computed with different quantiles \tau= \[`r paste0(taus,collapse=", ")`\].
:::

### Scenarios of interest

::: column-page-right
Models are built with two abiotic factors to increase their reliability. The couples tested are selected to apply them depending on data available and the focus on abiotic conditions, which can be in particular impacted by the global climate change:

A.  Current speed daily max \[`r factors[2,3]`\] and Inundation time \[`r factors[3,3]`\]: to compare results with [@cozzoli2014], and these variables are easily retrieved with some high frequency measurement (COASTHF) . They have also an interest because they contain information on the position in the tidal area that could evolve with sea level rise and the hydrological conditions from river flowrate change due to climate change even though they have a significant correlation (Corr = `r dfcornew %>% filter(variable %in% "flow_mxd") %>% select(inunt) %>% pull()`)
B.  Salinity daily range \[`r factors[5,3]`\] and Temperature \[`r factors[6,3]`\]: These factors are easily measurable on high frequency also (Somlit). They are both bearing the climate change by the global temperature change and the evolution of the river regime that would impact the salinity profile of the estuary (Corr = `r dfcornew %>% filter(variable %in% "sal_dtd") %>% select(temp_m) %>% pull()`). Temperature has also an impact on the fauna metabolism, thus its activity.
C.  Salinity daily range \[`r factors[5,3]`\] and Bathymetry \[`r factors[9,3]`\]: (Corr = `r dfcornew %>% filter(variable %in% "sal_dtd") %>% select(bathy) %>% pull()`). Those both factors are accessible in high frequency, large scale and remote measurements. They are a good geographical description of the estuary, and are highly concerned by the climate change by sea level rise, marine intrusion and river regime modifications.
D.  Mud content \[`r factors[14,3]`\] and Bed shear stress \[`r factors[11,3]`\]: Those variables are determinant in a building of an erosion model such as MARS3D (Corr = `r dfcornew %>% filter(variable %in% "mudrate_m") %>% select(tenfon_m) %>% pull()`).In addition, this choice relies on the high level of relation between sediment features and benthic communities responses.
:::

### Model Validation

# Results

## Biological data set description

::: column-page-right
```{r}
#| label: prefig-bio_struc

cerednb <- CSLN %>%
  filter(SPCourt %in% c(espece)) %>% 
  summarise(nbstat=n_distinct(idStationUnique)) %>% 
  pull()

cereddetper <- CSLN %>% 
  filter(SPCourt %in% c(espece)) %>% 
  group_by(Period) %>% 
  summarise(nbstat=n_distinct(idStationUnique)) %>% 
  unite(Periodnb,Period,nbstat,sep=" (n= ") %>% 
  pull() %>% 
  paste(collapse = "), ")

cereddetzon <- CSLN %>% 
  filter(SPCourt %in% c(espece)) %>% 
  filter(grepl("Mudflat",.$Zone)) %>%
  group_by(Zone) %>% 
  summarise(nbstat=n_distinct(idStationUnique)) %>% 
  arrange(desc(nbstat)) %>% 
  unite(Zonenb,Zone,nbstat,sep=" (n= ") %>% 
  pull() %>% 
  paste(collapse = "), ")
```

Biologic data for *C. edule* have a total count of n= `r cerednb` observations. The observations are split into periods as `r cereddetper`). Focus for following treatment is made on mudflats only for *C. edule* (`r cereddetzon`)). The differences of biomass \[gAFDW/m¬≤\] and density \[ind/m¬≤\] are detailed as function of period and areas (@fig-bio_struc). Over time and space, the only noticeable differences are for the biomass between the south mudflat and the north (median and downstream) in the period 2000-2005.

```{r}
#| label: fig-bio_struc
#| include: true
#| column: page-right
#| fig-cap: "C.edule population biomass [gAFDW/m¬≤] and density [ind/m¬≤] in the Seine estuary, by period for each area (A) and by areas for each period (B). Dots represent the mean and standard error of each sub-group."
#| fig-width: 16
#| fig-height: 12

wrap_plots(pl_des_gt) +
  plot_layout(ncol=1)

ggsave(sprintf("%sfig-bio_struc.tiff",wdgraph),
       width = 16, height = 6, dpi=600,
       plot = wrap_plots(pl_des_gt) ) 
       
iwalk(pl_des_gt,
  ~ggsave(sprintf("%sfig-bio_struc_%s.tiff",wdgraph,.y),
       plot = .x, width = 12, height = 6, dpi=600) )
```
:::

## HMS data set description

::: column-page-right
```{r}

df<- Mars_SDM_per %>% 
  st_drop_geometry() %>% 
  group_by(Zone) %>% 
  dplyr::summarise(across(all_of(Var_choosen),
                          list(m=~mean(.x,na.rm=TRUE),
                               sd=~sd(.x,na.rm=TRUE)),
                          .names = "{.col}.{.fn}" ) ) %>% 
  mutate(across(where(is.numeric),~round(.x,2)))

```

The selected predictors were observed with the same period and areas factors than the biological data. On a global point of view, all factors show significant differences between areas and periods:

-   Current speed daily max \[m.s-1\]: the most dynamic area is the channel, at a mean of `r df$flow_mxd.m[which(df$Zone=="Channel")]` +/- `r df$flow_mxd.sd[which(df$Zone=="Channel")]`. North upstream and median mudflats were subject to an evolution in time in the current distribution, which has an impact on their global mean (upstream `r df$flow_mxd.m[which(df$Zone=="North Upstream Mudflat")]` +/- `r df$flow_mxd.sd[which(df$Zone=="North Upstream Mudflat")]`; median `r df$flow_mxd.m[which(df$Zone=="North Median Mudflat")]` +/- `r df$flow_mxd.sd[which(df$Zone=="North Median Mudflat")]`). The north median mudflat significantly changed in its distribution, bimodal at the first periods, that became unimodal at the end. Spatially, the closer the estuary mouth, the higher the mean current speed.

-   Inundation time \[%\]: Only the north median and upstream mudflat were truly intertidal, the upstream more supratidal locations than the median, being more infratidal. north median mudflat showed a reduction of the bimodal aspect over time, which is consistent with the current speed observation. The south mudflat had some locations with low values, but was mainly subtidal.

-   Salinity daily range \[u.s.i\]: This factor displayed very different patterns regarding space and time. The offshore showed few salinity change during the day, but there was a low second modality around 10 degree of variation at all periods. The channel, under high river influence, had a 15-20 degree of variation in the day, but with a significant reduction as time went by. The three north mudflats showed a high dynamic variation of salinity that reduced after 2005

-   Temperature \[degC\]: All areas showed a global increase of the temperature over time. The north median mudflat had the higher range, due to its intertidal feature.

-   Mud content \[%\]: Offshore and south mudflat were lightly muddy sands, north downstream and median were more muddy sands, whereas north upstream and channel areas had a large spectra of sediment composition.

-   Bed shear stress daily max \[N.m-2\]: as shown by the current speed, the channel also exhibited the higher BSS (`r df$tenfon_mxd.m[which(df$Zone=="Channel")]` +/- `r df$tenfon_mxd.sd[which(df$Zone=="Channel")]`), while the other areas were similar (`r round(mean(df$tenfon_mxd.m[-which(df$Zone=="Channel")]),2)` +/- `r round(sd(df$tenfon_mxd.m[-which(df$Zone=="Channel")]),2)`). Changes in time at north median mudflat were consistent with current speed and inundation time.

-   True bathymetry \[m\]: channel and offshore were of similar depth, mean range `r paste0(range(df$bathy.m[which(df$Zone %in% c("Channel", "OffShore"))]),collapse="-")`. north downstream mudflat and south mudflat were the following deep areas (`r round(mean(df$bathy.m[which(df$Zone %in% c("North Downstream Mudflat", "South Mudflat"))]),2)` +/- `r round(sd(df$bathy.m[which(df$Zone %in% c("North Downstream Mudflat", "South Mudflat"))]),2)` ), the median mudflat was `r df$bathy.m[which(df$Zone %in% c("North Median Mudflat"))]` +/- `r df$bathy.sd[which(df$Zone %in% c("North Median Mudflat"))]`, and north upstream mudflat being the shallower, `r df$bathy.m[which(df$Zone %in% c("North Upstream Mudflat"))]` +/- `r df$bathy.sd[which(df$Zone %in% c("North Upstream Mudflat"))]` (negative bathymetry were above the mean height of sea water). The distribution of depth in north median mudflat exposes the same evolution in time with the reduction of very shallow areas.

Here is the detailed graph for each factors:

::: panel-tabset
```{r}
#| include: true
#| results: asis
#| fig-cap: "Mars3D selected factors distribution in the Seine estuary, by Period for each area (A) and by areas for each Period (B)"
#| fig-width: 16
#| fig-height: 10

iwalk(pl_mars_gt, 
      ~ {
        cat('#### ', .y, '\n\n')
        print(.x)
        cat('\n\n')
        })

iwalk(pl_mars_gt,
  ~ggsave(sprintf("%sfig-hms_struc_%s.tiff",wdgraph,.y),
       plot = .x, width = 12, height = 8, dpi=600) )


```
:::

```{r}
#| include: true
#| fig-cap: "Mars3D selected factors maps in the Seine estuary"
#| fig-width: 16
#| fig-height: 12

tm_mars_gb

```

:::

## Pre-evaluation of methods

::: column-page-right
```{r}
#| label: aic_res_3mod

tmp<- bind_rows(
  rqdata$rq_Mod_sel_sm,
  nlrqdata$rq_Mod_sel_sm,
  rqbsdata$rq_Mod_sel_sm)

tmpaic <- bind_rows(
  rqdata$rq_Mod_sel_sm,
  nlrqdata$rq_Mod_sel_sm,
  rqbsdata$rq_Mod_sel_sm) %>% 
  group_by(typetxt) %>% 
  summarise(m=round(mean(Delta_AICc),0),
            sd=round(sd(Delta_AICc),0)) %>%
  arrange(m) %>% 
  unite(msd,m,sd,sep=" +/- ") %>% 
  unite(tmsd,typetxt,msd,sep=" Delta AICc = ") %>% 
  pull() %>% 
  paste(collapse = ", ")

tmpaic2<- bind_rows(
  rqdata$rq_Mod_sel_sm,
  nlrqdata$rq_Mod_sel_sm,
  rqbsdata$rq_Mod_sel_sm) %>% 
  group_by(typetxt,tau) %>%
  filter(reponse=="Biomass_gAFDWm2") %>% 
  summarise(m=round(mean(Delta_AICc),0),
            sd=round(sd(Delta_AICc),0)) %>% 
  filter(tau==tauchoice) %>%
  arrange(m) %>% 
  select(-tau) %>% 
  unite(msd,m,sd,sep=" +/- ") %>% 
  unite(tmsd,typetxt,msd,sep=" Delta AICc = ") %>% 
  pull() %>% 
  paste(collapse = ", ")

tmprone <- bind_rows(
  rqdata$rq_Mod_sel_sm,
  nlrqdata$rq_Mod_sel_sm,
  rqbsdata$rq_Mod_sel_sm) %>% 
  group_by(typetxt) %>% 
  summarise(m=round(mean(Rone),3),
            sd=round(sd(Rone),3)) %>%
  arrange(desc(m)) %>% 
  unite(msd,m,sd,sep=" +/- ") %>% 
  unite(tmsd,typetxt,msd,sep=" R1 = ") %>% 
  pull() %>% 
  paste(collapse = ", ")

tmprone2<- bind_rows(
  rqdata$rq_Mod_sel_sm,
  nlrqdata$rq_Mod_sel_sm,
  rqbsdata$rq_Mod_sel_sm) %>% 
  group_by(typetxt,tau) %>% 
  filter(reponse=="Biomass_gAFDWm2") %>% 
  summarise(m=round(mean(Rone),3),
            sd=round(sd(Rone),3)) %>% 
  filter(tau==tauchoice) %>%
  arrange(desc(m)) %>% 
  select(-tau) %>% 
  unite(msd,m,sd,sep=" +/- ") %>% 
  unite(tmsd,typetxt,msd,sep=" R1 = ") %>% 
  pull() %>% 
  paste(collapse = ", ")
  
```

The three models are used to calculate the SDM for each predictors couples, at the different quantiles chosen. A global comparison of AIC scores is done for all the models computed (@fig-aic_3mod). The scores for models based on density were significantly higher than the ones using biometry, and the quantile choice had a real high impact on the score. For instance, the better scores were for the biomass models with the 0.5 quantile, which would not help describe the ecological optimum niche. On average, the BSpline model is lower than the others (`r tmpaic`). With the same biological response and the same quantile, the variations between models were although quite low (Biomass and tau=0.95: `r tmpaic2`).Regarding the R1, the results were more scattered regarding the response and the quantile used. Overall, the RQ2bsp had better score also, particularly at same response and quantile (`r tmprone2`).

The predict/observed plots (example for current speed daily max \[m.s-1\] and inundation time \[%\] in @fig-rq_qq_board), completed the observations of AIC and R1, i.e. RQ2bsp \> RQ2nli \> RQ2int (the regression lines of each quantile were closer to the 1:1 line). However, the RQ2int showed at some quantiles better performance than RQ2bsp. In particular the 0.95th quantile, which were defined as the optimum quantile, meaning the higher quantile without degrading the model quality, and was the only quantile used for further analyses.

On the range of both predictors, a surface of quantile response is determined, and illustrated by a surface plot (example with couple current speed daily max \[m.s-1\] and inundation time \[%\] @fig-3mod, interactive 3D plots below). Although good performance indicators, the RQ2bsp model shows graphically that it covers the data where they are, but with an overfitting that does not allow biologic process modelization. This model were thus discarded for the rest of the analysis.

```{r}
#| label: fig-aic_3mod
#| include: true
#| column: page-right
#| fig-cap: "Indicators comparison for all models computed with all predictors couples, by quantile and type of response"
#| fig-height: 3

AIC_plot<-bind_rows(
            rqdata$rq_Mod_sel_sm,
            nlrqdata$rq_Mod_sel_sm,
            rqbsdata$rq_Mod_sel_sm) %>% 
  select(all_of(c("Delta_AICc","Rone","reponse","typetxt","tau"))) %>% 
  distinct %>% 
  pivot_longer(cols=-c("reponse","typetxt","tau"), 
               names_to = "Indicator", values_to = "value") %>% 
  # filter(.,grepl(paste0(sdm_comb_sel$type[1,],collapse="|"),sdmname)) %>% 
  group_by(tau) %>%
  ggplot(aes(x=reponse, #reorder(factors,-AIC),
             y=value,
             color = factor(tau),
             shape = typetxt)) +
  geom_jitter(size= 4,width=.3, height=0 ) +
  scale_shape_manual(values=c(1, 8, 23)) +
  scale_color_manual(values=colRQ) +
 facet_grid(.~Indicator, scales="free") +
  labs(#title=titleG, 
       # x="Biologic",y="Indicator",
       color="Quantile",shape="Model") +
  theme(axis.text = element_text(size=10,face="bold"),
        strip.background = element_blank(),
        axis.title = element_blank()) +
  coord_flip(); AIC_plot
  
ggsave(sprintf("%sfig-aic_3mod.tiff",wdgraph),
       plot = AIC_plot,
       width = 8, height = 4, dpi=600)

```

```{r}
#| label: fig-rq_qq_board
#| include: true
#| fig-cap: "Example of modelled vs observed data plot for each model type based on biomass for current speed daily max [m.s-1] and inundation time [%]. Black line represents the 1:1 ratio"
#| fig-height: 10

pl_tmp<- pmap(list(rqdata$pl_rq_qq_sel,
             nlrqdata$pl_rq_qq_sel,
             rqbsdata$pl_rq_qq_sel) ,
          ~{ pmap(list(..1,..2,..3) ,
             ~{  (..1 +  ..2  + ..3 )  &
                plot_layout(guides="collect",
                            nrow=1) &
                theme(legend.position="bottom",
                      aspect.ratio=1) &
                plot_annotation(tag_levels = c('A'))
               } ) } )

walk(pl_tmp,
  ~{iwalk(., ~ggsave(sprintf("%sfig-rq_qq_board_%s.tiff",
                    wdgraph, .y),
                    plot = .x,
                    width = 18, height = 8, dpi=600) ) } )

pl_tmp$Biomass$RQ2int_11112

```

```{r}
#| label: prefig-3mod
#| include: true

repi<-1
sdi<-1
titleG <- sprintf("Linear QR comparison addition and interacton")
p1<-rqdata$pl_rq_sel_2d[[repi]][[sdi]]$all + 
      labs(title="Linear interaction",
           fill=NULL)
p2<-nlrqdata$pl_rq_sel_2d[[repi]][[sdi]]$all + 
      labs(title="Gaussian non-linear",
           fill=NULL)
p3<-rqbsdata$pl_rq_sel_2d[[repi]][[sdi]]$all + 
      labs(title="B-Spline linear",
           fill=NULL)

plot_tmp <- ggarrange(
  p1 + theme(axis.title = element_blank(),
             legend.text = element_text(size=8),
             aspect.ratio=1) +
      scale_fill_gradientn(colours=colRQ,limits=c(0,max(
        max(p1$data$RqMod,na.rm=TRUE),
        max(p2$data$RqMod,na.rm=TRUE)
        ))),
  p2 + theme(axis.title = element_blank(),
             legend.text = element_text(size=8),
             aspect.ratio=1) +
      scale_fill_gradientn(colours=colRQ,limits=c(0,max(
        max(p1$data$RqMod,na.rm=TRUE),
        max(p2$data$RqMod,na.rm=TRUE)
        ))),
  p3 + theme(axis.title = element_blank(),
             legend.text = element_text(size=8),
             aspect.ratio=1) +
      scale_fill_gradientn(colours=colRQ,limits=c(0,max(
        max(p1$data$RqMod,na.rm=TRUE),
        max(p2$data$RqMod,na.rm=TRUE)
        ))),
  ncol=3, nrow=1,
  labels="AUTO",
  legend="bottom", common.legend = TRUE)
plot_2d <- annotate_figure(plot_tmp,
                # top = text_grob(titleG, size=18),
                left = text_grob(p1$labels$y, rot = 90),
                bottom = text_grob(p1$labels$x))# +
        # bgcolor("white")

ggsave(sprintf("%sfig-3mod.tiff",wdgraph),
     plot = plot_2d,
     width = 18, height = 8, dpi=600)

im_RQ2int <- fig("Pictures/fig-graph_3d_RQ2int_11112.png")
im_RQ2nli <- fig("Pictures/fig-graph_3d_RQ2nli_11112.png")
im_RQ2bsp <- fig("Pictures/fig-graph_3d_RQ2bsp_11112.png") 
plot_img3d<- (im_RQ2int | im_RQ2nli | im_RQ2bsp) &
  plot_annotation(tag_levels = c('A'))

ggsave(sprintf("%sfig-3mod3d.tiff",wdgraph),
     plot = plot_img3d,
     width = 21, height = 7, dpi=600)
```

```{r}
#| label: fig-3mod
#| include: true
#| column: page-right
#| fig-cap: "SDM QR model surfaces: linear with interaction (A), Gaussian non-linear (B) and Cubic B-Splines linear (C). On the top the surfaces side by side, on the second line 3D plots, all processed quantiles superposed. All negative results of model were NA (in grey). Dots are the observations, in red when above the model surface."
#| fig-width: 16
#| fig-height: 10

plot_tmp<- plot_2d / plot_img3d +
  plot_layout(widths = c())
print(plot_tmp)

ggsave(sprintf("%sfig-3mod_n_3d.tiff",wdgraph),
     plot = plot_tmp,
     width = 16, height = 13, dpi=600)
```

```{r}
#| label: fig-3mod_3d_plotly
#| include: true
#| column: page-right
#| layout-ncol: 3
#| fig-cap: "SDM QR models interactive 3D plots"
#| fig-width: 16
#| fig-height: 10

rqdata$pl_rq_sel_3d$Biomass$RQ2int_11112$all
nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11112$all
rqbsdata$pl_rq_sel_3d$Biomass$RQ2bsp_11112$all

```
:::

## SDM-NEO

### Comparison of linear and nonlinear QR

```{r}
#| label: scores

rq_opti<-map_depth(rqdata$rq_Mod_sel,2,
  ~{ .x$mod_pred_t %>% 
      filter(tau==tauchoice) %>% 
      summarise(maxsdm=max(RqMod,na.rm=TRUE),
                optx1=x1[which.max(RqMod)],
                optx2=x2[which.max(RqMod)]) %>% 
      mutate(across(.cols=everything(),~round(.,2)))} ) %>% 
  map(., ~bind_rows(.x,, .id = "id"))

nlrq_opti<-map_depth(nlrqdata$rq_Mod_sel,2,
  ~{ .x$mod_pred_t %>% 
      filter(tau==tauchoice) %>% 
      summarise(maxsdm=max(RqMod,na.rm=TRUE),
                optx1=x1[which.max(RqMod)],
                optx2=x2[which.max(RqMod)]) %>% 
      mutate(across(.cols=everything(),~round(.,2)))} ) %>% 
  map(., ~bind_rows(.x,, .id = "id"))

```

A.  Current speed daily max \[`r factors[2,3]`\] and inundation time \[`r factors[3,3]`\]:
    1.  RQ2int optimum was of `r rq_opti$Biomass$maxsdm[1]`gAFDW/m¬≤, at ``` r rq_opti$Biomass$optx1[1]``r  factors[2,3] ``` and``` r rq_opti$Biomass$optx2[1]``r factors[3,3] ```; RQ2nli optimum was of `r nlrq_opti$Biomass$maxsdm[1]`gAFDW/m¬≤, at ``` r nlrq_opti$Biomass$optx1[1]``r factors[2,3] ``` and``` r nlrq_opti$Biomass$optx2[1]``r factors[3,3] ```.

    2.  RQ2int optimum was of `r rq_opti$Density$maxsdm[1]`ind/m¬≤, at ``` r rq_opti$Density$optx1[1]``r  factors[2,3] ``` and``` r rq_opti$Density$optx2[1]``r factors[3,3] ```; RQ2nli optimum was of `r nlrq_opti$Density$maxsdm[1]`gAFDW/m¬≤, at ``` r nlrq_opti$Density$optx1[1]``r factors[2,3] ``` and``` r nlrq_opti$Density$optx2[1]``r factors[3,3] ```.
    
B.  Salinity daily range \[`r factors[5,3]`\] and temperature \[`r factors[6,3]`\]: 
    1.  RQ2int optimum was of `r rq_opti$Biomass$maxsdm[2]`gAFDW/m¬≤, at ``` r rq_opti$Biomass$optx1[2]``r factors[5,3] ``` and``` r rq_opti$Biomass$optx2[2]``r factors[6,3] ```; RQ2nli optimum was of `r nlrq_opti$Biomass$maxsdm[2]`gAFDW/m¬≤, at ``` r nlrq_opti$Biomass$optx1[2]``r factors[5,3] ``` and``` r nlrq_opti$Biomass$optx2[2]``r factors[6,3] ```.

    2.  RQ2int optimum was of `r rq_opti$Density$maxsdm[2]`gAFDW/m¬≤, at ``` r rq_opti$Density$optx1[2]``r factors[5,3] ``` and``` r rq_opti$Density$optx2[2]``r factors[6,3] ```; RQ2nli optimum was of `r nlrq_opti$Density$maxsdm[2]`gAFDW/m¬≤, at ``` r nlrq_opti$Density$optx1[2]``r factors[5,3] ``` and``` r nlrq_opti$Density$optx2[2]``r factors[6,3] ```.

C.  Salinity daily range \[`r factors[5,3]`\] and bathymetry \[`r factors[9,3]`\]: 
    1.  RQ2int optimum was of `r rq_opti$Biomass$maxsdm[3]`gAFDW/m¬≤, at ``` r rq_opti$Biomass$optx1[3]``r factors[5,3] ``` and``` r rq_opti$Biomass$optx2[3]``r factors[9,3] ```; RQ2nli optimum was of `r nlrq_opti$Biomass$maxsdm[3]`gAFDW/m¬≤, at ``` r nlrq_opti$Biomass$optx1[3]``r factors[5,3] ``` and``` r nlrq_opti$Biomass$optx2[3]``r factors[9,3] ```.

    2.  RQ2int optimum was of `r rq_opti$Density$maxsdm[3]`gAFDW/m¬≤, at ``` r rq_opti$Density$optx1[3]``r factors[5,3] ``` and``` r rq_opti$Density$optx2[3]``r factors[9,3] ```; RQ2nli optimum was of `r nlrq_opti$Density$maxsdm[3]`gAFDW/m¬≤, at ``` r nlrq_opti$Density$optx1[3]``r factors[5,3] ``` and``` r nlrq_opti$Density$optx2[3]``r factors[9,3] ```.

D.  Mud content \[`r factors[14,3]`\] and bed shear stress \[`r factors[11,3]`\]: 
    1.  RQ2int optimum was of `r rq_opti$Biomass$maxsdm[4]`gAFDW/m¬≤, at ``` r rq_opti$Biomass$optx1[4]``r factors[14,3] ``` and``` r rq_opti$Biomass$optx2[4]``r factors[11,3] ```; RQ2nli optimum was of `r nlrq_opti$Biomass$maxsdm[4]`gAFDW/m¬≤, at ``` r nlrq_opti$Biomass$optx1[4]``r factors[14,3] ``` and``` r nlrq_opti$Biomass$optx2[4]``r factors[11,3] ```.

    2.  RQ2int optimum was of `r rq_opti$Density$maxsdm[4]`gAFDW/m¬≤, at ``` r rq_opti$Density$optx1[4]``r factors[14,3] ``` and``` r rq_opti$Density$optx2[4]``r factors[11,3] ```; RQ2nli optimum was of `r nlrq_opti$Density$maxsdm[4]`gAFDW/m¬≤, at ``` r nlrq_opti$Density$optx1[4]``r factors[14,3] ``` and``` r nlrq_opti$Density$optx2[4]``r factors[11,3] ```.


```{r}

plot_rq<-map_depth(rqdata$pl_rq_sel_2d,2,
  ~{ keep_at(.x,"one") %>%
      map(., ~.x[[taut]]) } ) %>% 
  map_depth(.,1,~list_flatten(.x,name_spec = "{outer}"))

plot_nlrq<-map_depth(nlrqdata$pl_rq_sel_2d,2,
  ~{ keep_at(.x,"one") %>%
      map(., ~.x[[taut]]) } ) %>% 
  map_depth(.,1,~list_flatten(.x,name_spec = "{outer}"))

# plot_rqbs<-map_depth(rqbsdata$pl_rq_sel_2d,2,
#   ~{ keep_at(.x,"one") %>%
#       map(., ~.x[[taut]]) } ) %>% 
#   map_depth(.,1,~list_flatten(.x,name_spec = "{outer}"))

```

::: column-page-right
The four couples of factors were treated with the two selected model types: either linear with interaction, or non-linear with bifactorial gaussian equation with the biomass as biologic response (@fig-graphboard_b, for density @fig-graphboard_d).

```{r}
#| label: prefig-graphboard_2d
 
plot_rq <- map2(plot_rq,plot_nlrq,
  ~ map2(.x,.y,
    ~.x + 
    scale_fill_gradientn(colours=colRQ,limits=c(0,max(
      max(.x$data$RqMod,na.rm=TRUE),
      max(.y$data$RqMod,na.rm=TRUE)))) +
      labs(title=model_types$code[2]) +
      theme(axis.title.x = element_blank(),
            plot.margin = unit(c(.1,.1,.1,.1), "null")) ) )
plot_nlrq <- map2(plot_nlrq,plot_rq,
  ~ map2(.x,.y,
    ~.x + 
    scale_fill_gradientn(colours=colRQ,limits=c(0,max(
      max(.x$data$RqMod,na.rm=TRUE),
      max(.y$data$RqMod,na.rm=TRUE)))) +
      labs(title=model_types$code[3]) +
    theme(
          plot.margin = unit(c(.1,.1,.1,.1), "null")) ) )

pl_board_rq_nlrq <- map2(plot_rq,plot_nlrq,
  ~ map2(.x,.y,
      ~ { .x / .y  +
        plot_layout(guides = 'collect',tag_level = 'new',widths = c()) & 
        theme(text=element_text(size=10),
              aspect.ratio=1,
              legend.position = "bottom") 
        } ) %>% 
  wrap_plots(nrow=1,ncol=4,tag_level="new") + #plot_layout(widths = c(.1,50,.1,50)) +
  plot_annotation(title = sprintf("SDM-NEO (tau=%g)",taus[taut]),
                  tag_levels = c('A', '1')) & 
  theme(plot.title = element_text(hjust = 0.5),
        plot.tag = element_text(size = 11,face = "bold")),
        plot.tag.position = "top")

iwalk(pl_board_rq_nlrq,
  ~ggsave(sprintf("%sfig-graphboard_2d_%s.tiff",wdgraph,.y),
       plot = .x, width = 12, height = 6, dpi=600) )

# with observed mars data
mars_tmp<-
  Mars_SDM_per %>% 
    filter(!Zone %in% c("Bay","Cote Fleurie","Ilot Oiseaux","Octeville")) %>% 
    filter(inunt!=1) 

ggplot(mars_tmp) +
    geom_point(aes(x=flow_mxd,y=inunt), color="gray20", alpha=0.2) +
  # stat_density_2d(aes(x=flow_mxd,y=inunt,
  #                     fill= "n"), #as.factor(..level..)), breaks=1,
  #                 geom = "polygon",fill="purple")
  geom_density_2d(
      aes(x=flow_mxd,y=inunt),
      alpha=0.8,color="purple",bins = 30) 

plot_rq_real <- map(plot_rq,
    ~imap(.x, ~{
          delete_layers(.x,"GeomDensity") +
          delete_layers(.x,"GeomPoint") +
          geom_density_2d(data=mars_tmp,
              aes(x=.data[[ pred_red_comb_sel[[substr(.y,11,12)]]$Var[1] ]],
                  y=.data[[ pred_red_comb_sel[[substr(.y,11,12)]]$Var[2] ]] ),
              alpha=0.3,color="gray50",bins = 30)  } ) )

plot_nlrq_real <- map(plot_nlrq,
    ~imap(.x, ~{
          delete_layers(.x,"GeomPoint") +
          geom_density_2d(data=mars_tmp,
              aes(x=.data[[ pred_red_comb_sel[[substr(.y,11,12)]]$Var[1] ]],
                  y=.data[[ pred_red_comb_sel[[substr(.y,11,12)]]$Var[2] ]] ),
              alpha=0.3,color="gray50",bins = 30)  } ) )

pl_board_rq_nlrq_real <- map2(plot_rq_real,plot_nlrq_real,
  ~ map2(.x,.y, ~ { .x / .y  +
        plot_layout(guides = 'collect',tag_level = 'new',widths = c()) & 
        theme(text=element_text(size=10),
              aspect.ratio=1,
              legend.position = "bottom") 
        } ) %>% 
  wrap_plots(nrow=1,ncol=4,tag_level="new") + #plot_layout(widths = c(.1,50,.1,50)) +
  plot_annotation(title = sprintf("SDM-NEO (tau=%g)",taus[taut]),
                  tag_levels = c('A', '1')) & 
  theme(plot.title = element_text(hjust = 0.5),
        plot.tag = element_text(size = 11,face = "bold")),
        plot.tag.position = "top")

iwalk(pl_board_rq_nlrq_real,
  ~ggsave(sprintf("%sfig-graphboard_2d_real_%s.tiff",wdgraph,.y),
       plot = .x, width = 12, height = 6, dpi=600) )

```

<!-- ```{r} -->

<!-- #| label: fig-graphboard_b -->

<!-- #| include: true -->

<!-- #| fig-cap: "The four selected factors couples computed with linear with interaction (top, numbered 1) and nonlinear with gaussian equation (bottom numbered 2), the biologic response being the biomass in Ash Free Dry Weight per square meter. Each couple have its own scale to ensure visibility." -->

<!-- #| fig-width: 16 -->

<!-- #| fig-height: 8 -->

<!-- pl_board_rq_nlrq$Biomass -->

<!-- ``` -->

<!-- ```{r} -->

<!-- #| label: fig-graphboard_d -->

<!-- #| include: true -->

<!-- #| fig-cap: "Selected factors couples models computed with linear with interaction (top, numbered 1) and nonlinear with gaussian equation (bottom numbered 2), the biologic response being the density in individuals per square meter" -->

<!-- #| fig-width: 16 -->

<!-- #| fig-height: 8 -->

<!-- pl_board_rq_nlrq$Density -->

<!-- ``` -->

::: panel-tabset
```{r}
#| include: true
#| results: asis
#| fig-cap: "Selected factors couples models computed with linear with interaction (top, numbered 1) and nonlinear with gaussian equation (bottom numbered 2), the biologic response being the density in individuals per square meter"
#| fig-width: 16
#| fig-height: 8

iwalk(pl_board_rq_nlrq, 
      ~ {
        cat('#### ', .y, '\n\n')
        print(.x)
        cat('\n\n')
        })
```
:::

::: panel-tabset
```{r}
#| include: true
#| results: asis
#| fig-cap: "Selected factors couples models computed with linear with interaction (top, numbered 1) and nonlinear with gaussian equation (bottom numbered 2), the density curves represent the observed HMS data"
#| fig-width: 16
#| fig-height: 8

iwalk(pl_board_rq_nlrq_real, 
      ~ {
        cat('#### ', .y, '\n\n')
        print(.x)
        cat('\n\n')
        })
```
:::
:::

### 3D visualisation

::: column-page-right
All quantiles representation

```{r}
#| include: true
#| layout-ncol: 2

nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11112$all
nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11134$all
nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11137$all
nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11156$all

# iwalk(nlrqdata$pl_rq_sel_3d,
#       ~ {
#         cat('#### ', .y, '\n\n')
#         map(.x, ~print(.x$all))
#         cat('\n\n')
#         })

# imap(nlrqdata$pl_rq_sel_3d,
#       ~ {
#         knitr::knit_child(text = c(
#               "#### ", .y, "\n\n",
#               "```{r}", "\n\n",
#               "#| layout-ncol: 2",
#               "#| label: fig-stat descr ", .y, "\n\n",
#               "#| fig-cap: try about this ", .y, "\n\n",
#               "map(.x, ~print(.x$all))",
#               "\n\n", "```", "\n\n"
#             ), envir = globalenv(), quiet = TRUE)
#         })

```

Only the chosen quantile

```{r}
#| include: true
#| layout-ncol: 2

nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11112$one[[sprintf("%0.3f",tauchoice)]]
nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11134$one[[sprintf("%0.3f",tauchoice)]]
nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11137$one[[sprintf("%0.3f",tauchoice)]]
nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11156$one[[sprintf("%0.3f",tauchoice)]]

```
:::

### SDM-NEO application maps

::: column-page-right

The non-linear model was globally more performant than the linear, it was the only one geographically analysed. Each model was applied on the Mars web over the estuary, for each period (). Density plots were made for each model, regarding each area and period to ease the comparisons ().

```{r}
#| label: prefig-graphboard_map
#| include: true

tmap_mode("plot") # "plot" "view"

# iwalk(rqdata$tm_mars_rq_gb, ~tmap_save(.x, dpi=600,
#               filename= sprintf("%sfig-graphboard_map_rq_%s.tiff",wdgraph,.y) ) )
# 
# iwalk(nlrqdata$tm_mars_rq_gb, ~tmap_save(.x, dpi=600,
#               filename= sprintf("%sfig-graphboard_map_nlrq_%s.tiff",wdgraph,.y) ) )

  # iwalk(nlrqdata$pl_rq_mars_sel_st_board, ~ggsave(.x, dpi=600,
  #               filename= sprintf("%sfig-mars_st_board_%s.tiff",wdgraph,.y) ) )
```

::: panel-tabset

#### Biomass

```{r}
#| include: true
#| fig-cap: "SDM models applied on the Seine estuary on the five period"
#| fig-width: 16
#| fig-height: 10

tmap_mode("plot") # "plot" "view"
print(nlrqdata$tm_mars_rq_gb$Biomass)

```

#### Density

```{r}
#| include: true
#| fig-cap: "SDM models applied on the Seine estuary on the five period"
#| fig-width: 16
#| fig-height: 10

tmap_mode("plot") # "plot" "view"
print(nlrqdata$tm_mars_rq_gb$Density)

```
:::

::: panel-tabset

#### Biomass

```{r}
#| include: true
#| fig-cap: "Density plot of the SDM models on each area and period. The dots are the 95th quantile of the observed data."
#| fig-width: 16
#| fig-height: 10

pl_tmp<- nlrqdata$pl_rq_mars_sel_st_board$Biomass & 
  xlim(c(0,100))

pl_tmp

ggsave(pl_tmp, width = 12, height = 12, dpi=600, filename= 
         sprintf("%sfig-mars_st_board_Biomass.tiff",wdgraph) )

```

#### Density

```{r}
#| include: true
#| fig-cap: "Density plot of the SDM models on each area and period. The dots are the 95th quantile of the observed data."
#| fig-width: 16
#| fig-height: 10

pl_tmp<- nlrqdata$pl_rq_mars_sel_st_board$Density &
  xlim(c(0,3000))

pl_tmp

ggsave(pl_tmp, dpi=600, filename= 
         sprintf("%sfig-mars_st_board_Density.tiff",wdgraph) )
```
:::

:::

### SDM-NEO maps stats details

#### Biomass

::: column-page-right
The four models result on the estuary regarding Areas and Periods, with the two calculation modes, for the biomass response

::: panel-tabset

```{r}
#| include: true
#| results: asis
#| fig-cap: "Density plot of the two predictors and the SDM model result on each area and period. The dots are the 95th quantile of the observed data."
#| fig-width: 16
#| fig-height: 10

iwalk(nlrqdata$pl_rq_mars_sel_st$Biomass, 
      ~ {
        cat('#### ', .y, '\n\n')
        print(.x)
        cat('\n\n')
        })
```
:::
:::

#### Density

::: column-page-right

::: panel-tabset
```{r}
#| include: true
#| results: asis
#| fig-cap: "Density plot of the two predictors and the SDM model result on each area and period. The dots are the 95th quantile of the observed data."
#| fig-width: 16
#| fig-height: 10

iwalk(nlrqdata$pl_rq_mars_sel_st$Density, 
      ~ {
        cat('#### ', .y, '\n\n')
        print(.x)
        cat('\n\n')
        })

```
:::
:::

# Final actions and save

::: column-page-right
```{r}
#| label: finalsave_rdata

# rm("rqdata","nlrqdata","rqbsdata")
# save(list=(ls()[!grepl("rq_", ls())]),
# file = paste0(rdataout,".RData"))
beepr::beep(2)

```
:::

# Supplementary data

## Software details

::: {.callout-tip collapse="true"}
## Expand for R Session Info

```{r, echo = FALSE}
#| include: true

library(sessioninfo)
pkg_sesh <- session_info(pkgs = "attached")
quarto_version <- system("quarto --version", intern = TRUE)
pkg_sesh$platform$quarto <- paste(
  system("quarto --version", intern = TRUE),
  "@",
  quarto::quarto_path()
  )
pkg_sesh
```
:::

# References {.unnumbered}
