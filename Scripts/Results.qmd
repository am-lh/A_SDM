---
title: "MELTING POTES"
author: "Am√©lie Lehuen"
description: "Task A : SDM-NEO Data analysis"
date: "`r format(Sys.time(), '%d %B %Y')`"
editor: source
execute:
  eval: true
  echo: false
  message: false
  warning: false
  output: true
  include: false
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: load-packages
#| code-summary: "Packages"

library(conflicted)
library(knitr)
library(readxl) ; library(openxlsx)
library(beepr); library(clipr)
library(tidyverse); library(data.table)
library(broom); library(purrr) # tidy,glance,augment
library(lubridate)
library(rstatix); library(Hmisc)  # corr and pvalue calculation

# SIG
library(sf); library(sfheaders)
library(rnaturalearth) # library(raster)
library(tmap)
library(tmaptools) # tmap_mode; for static and interactive maps
library(ggspatial)

# Graphics packages
library(scales) ; library(grafify)
library(RColorBrewer) ; library(wesanderson); library(colorspace)
library(ggpubr);library(GGally)#; library(patchwork)
library(patchwork)
library(metR)
library(rayshader)
library(introdataviz) # geom_split_violin # devtools::install_github("psyteachr/introdataviz")
library(ggridges) # geom_density_ridges
library(ggforce)

conflict_prefer("transpose", "purrr")
conflict_prefer("filter", "dplyr")
conflict_prefer("select", "dplyr")
conflict_prefer("summarise", "dplyr")
conflict_prefer("melt", "reshape2")
conflict_prefer("layout", "plotly")

sf_use_s2(FALSE)
tmap_mode("view") # "plot" "view"
Sys.setlocale("LC_TIME", "English")
```

# Introduction

```{r}
#| label: workenvir

rm(list=ls())
wdsource <- "Data/Faune/CSLN/"
wdmat <- "Matrices/"
wdgraph <- "Plots/"
wdres <- "Results/"

pc <- "C:/Users/lehuen201/Nextcloud/" # "E:/" #
wdGIS <- paste(pc,"Melting Pot/SIG/",sep="");
wdscript <- paste(pc,"Melting Pot/BDD/Scripts/",sep="")
wdmsr <- (paste(wdscript,"MSR/MSR.R",sep=""))

```

```{r}
#| label: graphchart

theme_set(theme_bw(base_size = 14))
colDarj <- function(x) {wes_palette("Darjeeling2",x, type = "continuous")}
colZiss <- function(x) {wes_palette("Zissou1",x, type = "continuous")}
colSpec <- colorRampPalette(brewer.pal(8, "Spectral")); # show_col(colSpec(2))
colDark <- colorRampPalette(brewer.pal(8, "Dark2"));
Scale_col <- function(x) {scale_colour_manual(values=colDarj(x))}
Scale_fill <- function(x) {scale_fill_manual(values=colDarj(x))}
Scale_brew <- function() {scale_colour_brewer(palette="Spectral",aesthetics=c("colour","fill"))}
Scale_co <- function() 
  {scale_colour_manual(palette=colorRampPalette(brewer.pal(11, "Spectral")))}
Scale_fi <- function() 
  {scale_fill_manual(palette=colorRampPalette(brewer.pal(11, "Spectral")))}


pal_cspx <- function(x) {divergingx_hcl(x,palette = "Zissou 1")};
colBin<-c(pal_cspx(6)[3],pal_cspx(6)[5]); 
colRQ<-pal_cspx(4); blank<-alpha("#dae8ed",0.1); # show_col(colBin)
Scalc_rq<- function() {scale_colour_manual(values=colRQ)}
Scalf_rq2d <- function() {scale_fill_gradientn(colours=colRQ)} 

```

```{r}
#| label: func

loadRData <- function(fileName){
#loads an RData file, and returns it
    load(here::here(fileName))
    mget(ls()[ls() != "fileName"])
}

# Function for corr ad pvalue table x is a matrix containing the data
# method : correlation method. "pearson"" or "spearman"" is supported
# removeTriangle : remove upper or lower triangle
# results :  if "html" or "latex"
# the results will be displayed in html or latex format
corstars <-function(x, method=c("pearson", "spearman"), 
                    removeTriangle=c("upper", "lower"),
                     result=c("none", "html", "latex")){
    #Compute correlation matrix
    require(Hmisc)
    x <- as.matrix(x)
    correlation_matrix<-rcorr(x, type=method[1])
    R <- correlation_matrix$r # Matrix of correlation coeficients
    p <- correlation_matrix$P # Matrix of p-value 
    
    ## Define notions for significance levels; spacing is important.
    mystars <- ifelse(p < .0001, "****", 
                      ifelse(p < .001, "***", 
                             ifelse(p < .01, "**", 
                                    ifelse(p < .05, "*", " "))))
    
    ## trunctuate the correlation matrix to two decimal
    R <- format(round(cbind(rep(-1.11, ncol(x)), R), 2))[,-1]
    
    ## build a new matrix that includes the correlations with their apropriate stars
    Rnew <- matrix(paste(R, mystars, sep=""), ncol=ncol(x))
    diag(Rnew) <- paste(diag(R), " ", sep="")
    rownames(Rnew) <- colnames(x)
    colnames(Rnew) <- paste(colnames(x), "", sep="")
    
    ## remove upper/lower triangle of correlation matrix
    if(removeTriangle[1]=="upper"){
      Rnew <- as.matrix(Rnew)
      Rnew[upper.tri(Rnew, diag = TRUE)] <- ""
    }
    else if(removeTriangle[1]=="lower"){
      Rnew <- as.matrix(Rnew)
      Rnew[lower.tri(Rnew, diag = TRUE)] <- ""
    }
    
    ## remove last column and return the correlation matrix
    Rnew <- as.data.frame(Rnew)
    Rnew <- cbind(Rnew[1:length(Rnew)-1])
    if (result[1]=="none") return(Rnew)
    else{
      if(result[1]=="html") print(xtable(Rnew), type="html")
      else print(xtable(Rnew), type="latex") 
    }
} 

replace_outliers <- function(x, coefv=1.5) {
  replace(x, x %in% boxplot.stats(x, coef = coefv)$out, NA) #mean(x)
}

```

```{r}
#| label: externdata

rdatain  <- sprintf("%sCSLN_Mars_RQ_BDD.RData",wdmat)
rqdata<-loadRData(rdatain)
rdatain  <- sprintf("%sCSLN_Mars_RQnli_BDD.RData",wdmat)
nlrqdata<-loadRData(rdatain)
rdatain  <- sprintf("%sCSLN_Mars_RQbsp_BDD.RData",wdmat)
rqbsdata<-loadRData(rdatain)
rdatain  <- sprintf("%sCSLN_Mars_BDD.RData",wdmat)
load(rdatain) #load(here::here(rdatain))
rdatain  <- sprintf("%sCSLN_Mars_plot.RData",wdmat)
load(rdatain)
load(sprintf("SIG/OSM_extraction.RData"))

```

```{r}
#| label: outfiles
rdataout  <- sprintf("%sA_SDM_NEO_Results.RData",wdmat)
# if exists
# load(rdataout)

wdgraph <- "Plots/" # rerun it because of loads
```

```{r}
#| label: basicvar

etude <- "CSLN_Mars"
espece <- "CERED"
sp <- which(speciesMP$SPCourt == espece)
sai <- which(saison$M_Def == "Year")
tauchoice<-0.975
taut <- which(taus %in% c(tauchoice))  # c(0.5,0.9,0.95,0.975)

# rqname<- matrix(paste0(model_types$code[1],"_",sdm_comb_sel$type),nrow=4,ncol=2)

factors<-predict # %>% filter(Var %in% Var_choosen)
```

# Materials and Methods

::: column-page-right

All data treatment has been conducted with `r R.version.string` except for MARS3D pre-treatment on Matlab 2019a. Significance levels are tagged for p \< .0001 with "\*\*\*\*", p \< .001 with "\*\*\*", p \< .01 with "\*\*", p \< .05 with "\*".

:::

## Study area

::: column-page-right

The Seine estuary has been studied regarding several historically known areas that have either habitat or communities differences. These areas are mainly mudflats and subtidal areas, are represented in @fig-map.

```{r}
#| label: fig-map
#| include: true
#| fig-cap: "Maps of habitats areas defined in the study area dataset"
#| fig-width: 14
#| fig-height: 10

tm_study_map

ggsave(tm_study_map, 
          filename= sprintf("%sfig-map.tiff",wdgraph), 
       dpi=600, width = 10,  height = 7)
```

Here is an interactive map

```{r}
#| label: fig-map_html
#| include: true
#| fig-cap: "Interactive map of habitats areas defined for the study"

tmap_mode("view") # "plot" "view"
tm_study_map_html

```

:::

## Biological model

## Datasets

### Biologic data

::: column-page-right

```{r}
#| label: biostats_1

rawnb <-count(CSLN_raw) %>%
  pull() %>% 
  formatC(., format="f", big.mark=",", digits=0)
cleannb <-count(CSLN) %>% 
  pull() %>% 
  formatC(., format="f", big.mark=",", digits=0)
yearsrange <- CSLN %>% 
  mutate(Annee = as.numeric(levels(Annee))[Annee]) %>% # reconvert factors
  arrange(Annee) %>% 
  slice(c(1,n())) %>% 
  pull(Annee) %>%
  paste(collapse = " to ")
moisyear <- CSLN %>% group_by(Annee,Station_originelle) %>% 
  summarise(nbcamp=n_distinct(Mois)) %>% 
  group_by(nbcamp) %>%
  summarise(nbstat=n_distinct(Station_originelle)) %>% 
  arrange(desc(nbstat)) %>%
  slice(1:2) %>% #slice(c(1,n())) %>%
  pull(nbcamp) %>%
  paste(collapse = " to ")
nbstattot <- CSLN %>% 
  summarise(n_distinct(Station_originelle)) %>% 
  pull()
nbstatyr <- CSLN %>% group_by(Annee) %>% 
  summarise(nbstat=n_distinct(Station_originelle)) %>%
  summarise(nbstat=round(mean(nbstat),0)) %>% 
  pull()
period <- CSLN %>% group_by(Mois) %>% 
  mutate(Mois = month.abb[as.numeric(levels(Mois))[Mois]]) %>%
  summarise(nbstat=n_distinct(Station_originelle)) %>%
  arrange(desc(nbstat)) %>% 
  slice(1:3) %>% 
  pull(Mois) %>% 
  paste(collapse = ", ")
recbef2000 <- CSLN_Mars %>% 
  filter(!Zone  %in% c("Channel","Bay")) %>% # at minimum
  filter(Period == "1996-1999") %>%
  filter(!SPCourt %in% c("SEMBA","AMPIM","AUSMO",
                         "BALCR","MYTED","BIVAL","ANNEL")) %>%
  # filter(SPCourt %in% c(espece)) %>% 
  # summarise(n_distinct(idStationUnique)) %>% 
  count() %>% 
  pull()
richspe <- CSLN %>% 
  summarise(nbstat=n_distinct(Taxon_SNa)) %>% 
  pull()

```

The raw data (n= `r rawnb`) has been harmonised and grouped to obtain a single database of `r cleannb` observations, and `r nbstattot` sampling stations in total (with some variation in coordinates from year to year), with an average of `r nbstatyr` stations per campaign, occurred mainly in the months of `r period`. Along the all period covered by the dataset, from `r yearsrange` (before 2000 has been discarded, too few observations n=`r recbef2000`), with `r moisyear` sampling campaigns per year, a series of 5-years periods has been defined, 2000-2005 the building of 'Port 2000' with high disruption in the estuary area; 2006-2010; 2011-2015; 2016-2019. `r richspe` different species has been founded in all the observations.

:::

### HMS data

::: column-page-right

```{r}
#| label: abiostats_1

marsweb <- Mars_csv %>% 
  summarise(nbstat=n_distinct(NINJ)) %>% 
  pull() %>% 
  formatC(., format="f", big.mark=",", digits=0)
marsxy <- Mars_csv %>% select(NINJ) %>% 
  separate(NINJ, c("Y", "X"),sep="_") %>%
  mutate(X=as.numeric(X), Y=as.numeric(Y)) %>% 
  summarise(across(.cols=everything(),~(max(.x)-min(.x)))) %>% # sapply(., max)
  unite(fus,Y,X,sep=" by ") %>%
  pull(fus)
marslonlat <- Mars_csv %>% 
  select(Lon,Lat) %>%
  summarise(across(.cols=everything(),
                   ~(sprintf("%g to %g",
                             round(min(.x),4),
                             round(max(.x),4))))) %>%
  unite(fus,Lon,Lat,sep=" and Latitude ") %>%
  pull(fus)
  
marsmaillenb <-CSLN_Mars %>% 
  select(NINJ) %>% 
  drop_na() %>% 
  summarise(nbstat=n_distinct(NINJ)) %>% 
  pull() %>% 
  formatC(., format="f", big.mark=",", digits=0)
marsmailledet <- CSLN_Mars %>% 
  select(NINJ,Tidal_level) %>% 
  drop_na() %>% 
  group_by(Tidal_level) %>% 
  summarise(nbstat=n_distinct(NINJ)) %>% 
  unite(Tidalnb,Tidal_level,nbstat,sep=" (n= ") %>% 
  pull() %>% 
  paste(collapse = "), ")
```

All Seine Bay MARS3D model is calculated in a grid of `r formatC(700*112, format="f", big.mark=",", digits=0)` mesh (700 by 112), focused on the Seine Estuary with a grid of 'only' `r marsweb` mesh (`r marsxy`), with the coordinates of Longitude `r marslonlat`. Mars mesh corresponding to the stations localisation in the biologic dataset are at total `r marsmaillenb` with the distinction in the position in the tidal area as `r marsmailledet`).

:::

### Predictors calculation and selection

::: column-page-right

```{r}
#| label: globcorr

df <- CSLN_mud %>% 
  filter(SPCourt == espece) %>%
  select(paste(factors[,1],saison[sai,1],sep=""),
         map(reponse_l,~.x$rvar) %>% unlist(., use.names=FALSE) )

dfcornew <- corstars(df, result="none",removeTriangle="") %>% 
  mutate(variable=rownames(.)) %>% 
  relocate(variable)
# dftest<-dfcornew %>% mutate(across(.cols = everything(), str_replace_all, ".*\\s", ""))

```

All variables have been observed and a correlation study has been conducted to select the more pertinent factors and avoid autocorrelation between factors.

-   **Current Speed daily max** \[`r factors[2,3]`\] (named `r factors[2,1]`) is chosen over Current_Speed \[`r factors[1,3]`\] to reflect hydrodynamics occurring on mudflats (Corr = `r dfcornew %>% filter(variable %in% "flow_mxd") %>% select(flow_m) %>% pull()`).
-   **Inundation time** \[`r factors[3,3]`\] (named `r factors[3,1]`) is chosen rather than True bathymetry \[`r factors[9,3]`\], to be more informative on tidal position (Corr = `r dfcornew %>% filter(variable %in% "bathy") %>% select(inunt) %>% pull()`).
-   **Salinity daily range** \[`r factors[5,3]`\] (named `r factors[5,1]`) is preferred to Salinity \[`r factors[4,3]`\] to emphasize more the tidal influence (Corr = `r dfcornew %>% filter(variable %in% "sal_dtd") %>% select(sal_m) %>% pull()`).
-   **Temperature** \[`r factors[6,3]`\] (named `r factors[6,1]`) is picked upon Temperature daily range \[`r factors[7,3]`\] for its accessibility (Corr = `r dfcornew %>% filter(variable %in% "temp_dtd") %>% select(temp_m) %>% pull()`) and the range being reflected by the Inundation time (Corr = `r dfcornew %>% filter(variable %in% "temp_dtd") %>% select(inunt) %>% pull()`).
-   **Mud content** \[`r factors[14,3]`\] (named `r factors[14,1]`) is chosen over Sediment total conc \[`r factors[13,3]`\] to link with other references (Corr = `r dfcornew %>% filter(variable %in% "mudrate_m") %>% select(Csed_m) %>% pull()`).
-   **Bed shear stress daily max** \[`r factors[12,3]`\] (named `r factors[12,1]`) is poorly correlated to Bed shear stress \[`r factors[11,3]`\] (Corr = `r dfcornew %>% filter(variable %in% "tenfon_mxd") %>% select(tenfon_m) %>% pull()`) but the former is preferred to indicate the extreme local conditions that can lead to erosion of sediment.
-   **True bathymetry** \[`r factors[9,3]`\] is correlated to a lot of factors, but very low to Salinity daily range (Corr = `r dfcornew %>% filter(variable %in% "sal_dtd") %>% select(bathy) %>% pull()`). It is kept for its wide accessibility in any estuary.
-   MES mud \[`r factors[8,3]`\] is not selected to focus on benthic erosion phenomena more than MTZ processes even though it is not correlated to a lot of factors.
-   Yearly sediment budget \[`r factors[10,3]`\] is not correlated to any other variable but its distribution makes it not relevant.

```{r}
#| label: fig-corrmatrix
#| include: true
#| fig-cap: "Correlation plot of all variable extracted from MARS3D dataset and Biomass and Density from biological dataset" 
#| fig-width: 14
#| fig-height: 10

pl_mars_corr

ggsave(sprintf("%sfig-corrmatrix.tiff",wdgraph),
       plot = pl_mars_corr, width = 16, height = 9, dpi=600)

```

:::

## Models adjustments

### Quantile regression

### Scenarios of interest

::: column-page-right

Models are built with two abiotic factors to increase their reliability. The couples tested are selected to apply them depending on data available and the focus on abiotic conditions, which can be in particular impacted by the global climate change:

A.  Current Speed daily max \[`r factors[2,3]`\] and Inundation time \[`r factors[3,3]`\]: to compare results with [@cozzoli2014], and these variables are easily retrieved with some high frequency measurement (COASTHF) . They have also an interest because they contain information on the position in the tidal area that could evolve with sea level rise and the hydrological conditions impact by the river flowrate change due to climate change even though they have a significant correlation (Corr = `r dfcornew %>% filter(variable %in% "flow_mxd") %>% select(inunt) %>% pull()`)
B.  Temperature \[`r factors[6,3]`\] and Salinity daily range \[`r factors[5,3]`\]: These factors are easily measurable on high frequency also (Somlit). They are both bearing the climate change for the global temperature change and the evolution of the river regime that would impact the salinity profile of the estuary (Corr = `r dfcornew %>% filter(variable %in% "temp_m") %>% select(sal_dtd) %>% pull()`). Temperature has also an impact on the fauna metabolism, thus its activity.
C.  Bathymetry \[`r factors[6,3]`\] and Salinity daily range \[`r factors[5,3]`\]: (Corr = `r dfcornew %>% filter(variable %in% "temp_m") %>% select(inunt) %>% pull()`). Those both factors are accessible in high frequency, large scale and remote measurements, which make an easy to transpose model.
D.  Mud content \[`r factors[14,3]`\] and Bed shear stress \[`r factors[11,3]`\]: Those variables are determinant in a building of an erosion model such as MARS3D (Corr = `r dfcornew %>% filter(variable %in% "mudrate_m") %>% select(tenfon_m) %>% pull()`).

For each couple, the three model types are computed with different quantiles ÔÅ¥=[0.5, 0.9, 0.95, 0.975].

:::

### Model Validation

# Results

## Biological data set description

::: column-page-right

```{r}
#| label: prefig-cered_struc

cerednb <- CSLN %>%
  filter(SPCourt %in% c(espece)) %>% 
  summarise(nbstat=n_distinct(idStationUnique)) %>% 
  pull()

cereddetper <- CSLN %>% 
  filter(SPCourt %in% c(espece)) %>% 
  group_by(Period) %>% 
  summarise(nbstat=n_distinct(idStationUnique)) %>% 
  unite(Periodnb,Period,nbstat,sep=" (n= ") %>% 
  pull() %>% 
  paste(collapse = "), ")

cereddetzon <- CSLN %>% 
  filter(SPCourt %in% c(espece)) %>% 
  filter(grepl("Mudflat",.$Zone)) %>%
  group_by(Zone) %>% 
  summarise(nbstat=n_distinct(idStationUnique)) %>% 
  arrange(desc(nbstat)) %>% 
  unite(Zonenb,Zone,nbstat,sep=" (n= ") %>% 
  pull() %>% 
  paste(collapse = "), ")
```

Biologic data for *C. edule* have a total count of n= `r cerednb` observations. The differences of biomass \[gAFDW/m¬≤\] and density \[ind/m¬≤\] are detailed regarding time and areas (@fig-cered_struc) with their significative differences. The observations are split into periods as `r cereddetper`). Focus for following treatment is made on mudflats only for their biologic relevance for *C. edule* (`r cereddetzon`)). Over time and space, the only notable differences are for the Biomass between the South Mudflat and the North (Median and Downstream) in the period 2000-2005.

```{r}
#| label: fig-cered_struc
#| include: true
#| column: page-right
#| fig-cap: "C. edule population biomass [gAFDW/m¬≤] and density [ind/m¬≤] in the Seine estuary, by Period for each area (A) and by areas for each Period (B) with significant differences"
#| fig-width: 16
#| fig-height: 10

pl_des_b_gt

pl_des_d_gt

iwalk(list(Biomass=pl_des_b_gt,Density=pl_des_d_gt),
  ~ggsave(sprintf("%sfig-cered_struc_%s.tiff",wdgraph,.y),
       plot = .x, width = 12, height = 8, dpi=600) )

# knitr::include_graphics(‚Äòmy.png‚Äô)
```

::: panel-tabset

```{r}
#| include: true
#| results: asis

imap(list(Biomass=pl_des_b,Density=pl_des_d),
      ~ {
        cat('#### ', .y, '\n\n')
        print(kable(bind_rows(.x$geog$stat.test,.x$time$stat.test)))
        cat('\n\n')
        })

# imap(list(Biomass=pl_des_b,Density=pl_des_d),
#       ~ {
#         knitr::knit_child(text = c(
#               "#### ", .y, "\n\n",
#               "```{r}", "\n\n",
#               "#| label: fig-stat descr ", .y, "\n\n",
#               "#| fig-cap: try about this ", .y, "\n\n",
#               "print(kable(bind_rows(.x$geog$stat.test,.x$time$stat.test)))",
#               "\n\n", "```", "\n\n"
#             ), envir = globalenv(), quiet = TRUE)
#         })

```
At some point, see how to make better tables (https://stackoverflow.com/questions/74707808/programatically-generate-tabset-panels-of-datatables-in-quarto)
:::

:::

## HMS data set description

:::: column-page-right

```{r}

df<- Mars_SDM_per %>% 
  st_drop_geometry() %>% 
  group_by(Zone,Period) %>% 
  dplyr::summarise(across(all_of(Var_choosen),
                          list(m=~mean(.x,na.rm=TRUE),
                               sd=~sd(.x,na.rm=TRUE)),
                          .names = "{.col}.{.fn}" ) )

```

The selected predictors have been observed with the same period and areas factors than the biological data. On a global point of view, all factors show significant differences between areas and periods:

-   Current Speed daily max \[m.s-1\]: the most dynamic area is the Channel, at a mean of `r mean(df$flow_mxd.m[which(df$Zone=="Channel")])` +/- `r sd(df$flow_mxd.m[which(df$Zone=="Channel")])`. North upstream and median mudflats show an evolution in time in the current distribution, which has an impact on their global mean (upstream `r mean(df$flow_mxd.m[which(df$Zone=="North Upstream Mudflat")])` +/- `r sd(df$flow_mxd.m[which(df$Zone=="North Upstream Mudflat")])`; median `r mean(df$flow_mxd.m[which(df$Zone=="North Median Mudflat")])` +/- `r sd(df$flow_mxd.m[which(df$Zone=="North Median Mudflat")])`). The North median mudflat have a significant change in its distribution, bimodal at the first periods, that become unimodal at the end. Spatially, the closer the estuary mouth, the higher the mean current.

-   Inundation time \[%\]: Only the North median and upstream mudflat are truly intertidal, the upstream more supratidal locations than the median, having more infratidal. North median mudflat shows a reduction of the bimodal aspect over time, which is consistent with the current observation. The South mudflat has some high locations, but is it is mainly infratidal.

-   Salinity daily range \[u.s.i\]: This factor shows very different pattern regarding space and time. The offshore have mainly few salinity change during the day, but there is a low second modality around 10 degree of variation on all periods. The Channel, under high river influence, have a 15-20 degree of variation in the day, but with a significant reduction as time goes by. The three North mudflats show the same tendency to reduce a high dynamic variation of salinity after 2005.

-   Temperature \[degC\]: All areas show a global increase of the temperature over time. The North median mudflat has the higher range, due to its intertidal character.

-   Mud content \[%\]: Offshore and South mudflat are lightly muddy sands, North downstream and median are more muddy sands, whereas North upstream and Channel areas have a large spectra of sediment qualities.

-   Bed shear stress daily max \[N.m-2\]: as shown by the current, the Channel has again the higher BSS (mean XX +/- xx), when the other areas are of the same order. Changes in time in North median mudflat are coherent with current and inundation time.

-   True bathymetry \[m\]

Here is the detailed graph for each factors:

::: panel-tabset

```{r}
#| include: true
#| results: asis
#| fig-width: 16
#| fig-height: 10

iwalk(pl_mars_gt, 
      ~ {
        cat('#### ', .y, '\n\n')
        print(.x)
        cat('\n\n')
        })

iwalk(pl_mars_gt,
  ~ggsave(sprintf("%sfig-hms_struc_%s.tiff",wdgraph,.y),
       plot = .x, width = 12, height = 8, dpi=600) )


```


```{r}
nlrqdata[["rq_Mod_sel"]][["Biomass"]][["RQ2nli_11112"]][["rqlim_t"]] %>% 
  filter(tau==0.975) %>% 
      ggplot( ) +
  geom_point(aes(x=y,y=RqLim))
```

:::

remove signif on plots?

```{r}
# pl_mars_gt_light<-map_depth(pl_mars, 2,
#                       ~discard_at(.$plot$layer,3 )
#                       )
# 
# tmp<-pl_mars
# pluck(tmp$flow_mxd$geog, plot$layers[[3]]) <- NULL
# tmp<-discard_at(tmp$flow_mxd$geog$plot$layers, 3)

# iwalk(pl_mars_gt_light,
#   ~ggsave(sprintf("%sfig-hms_struc_%s_light.tiff",wdgraph,.y),
#        plot = .x, width = 12, height = 8, dpi=600) )
```

Here are the statistical significance results for each factor:

::: panel-tabset

```{r}
#| include: true
#| results: asis

iwalk(pl_mars, 
      ~ {
        cat('#### ', .y, '\n\n')
        # print(kable(bind_rows(.x$geog$stat.test,.x$time$stat.test)))
        cat('\n\n')
        })

```

:::

::::

## Pre-evaluation of methods

### Linear QR type selection

::: column-page-right

```{r}
#| label: aic_res_add_int

# rqdata$rq_Mod_all_sm<-
#   rqdata$rq_Mod_all %>% 
#     map_depth(.,2, ~map_dfr(.$smrq_t, ~.) ) %>% 
#     map(., ~map_dfr(., ~.) ) %>% 
#     map_dfr(., ~.) %>% 
#   mutate(Delta_AICc= AICc-min(AICc,na.rm=TRUE))

df <- rqdata$rq_Mod_all_sm %>% 
  filter(!grepl("^RQ1",typetxt)) %>% 
  group_by(typetxt) %>% 
  summarise(AICc_m=round(mean(Delta_AICc),2),
            AICc_sd=round(sd(Delta_AICc),2))

```

Using the first factor couple as example, the comparison between linear QR with or without interaction (@fig-add_int) shows a minor difference of result that does not impact the AICc (@fig-aic_add_int) with biomass, simple addition Delta_AICc=`r df$AICc_m[1]`+/-`r df$AICc_sd[1]`, with interaction Delta_AICc=`r df$AICc_m[2]`+/-`r df$AICc_sd[2]`). The linear model with interaction is preferred for biologic reasons: the fauna reacts to the conjunction of factors.

```{r}
#| label: fig-aic_add_int
#| include: true
#| column: page-right
#| fig-cap: "SDM Linear Quantile Regression AIC comparison with/without interaction for Biomass and Density"
#| fig-height: 3

AIC_plot<-rqdata$rq_Mod_all_sm %>% 
  select(all_of(c("Delta_AICc","reponse","type","tau"))) %>% 
  distinct %>% 
  # filter(.,grepl(paste0(sdm_comb_sel$type[1,],collapse="|"),sdmname)) %>% 
  group_by(tau) %>%
  ggplot(aes(x=reponse, #reorder(factors,-AIC),
             y=Delta_AICc,
             color = factor(tau),
             shape = type)) +
  geom_jitter(size= 5) +
  scale_shape_manual(values=c(1, 8)) +
  scale_color_manual(values=colRQ) +
 # facet_grid(.~reponse) +
  labs(#title=titleG, 
       x="Biologic",y="Delta_AICc",
       color="Quantile",shape="Model") +
  theme(axis.text = element_text(size=10,face="bold")) +
  coord_flip(); AIC_plot
  
ggsave(sprintf("%sfig-aic_add_int.tiff",wdgraph),
       plot = AIC_plot,
       width = 8, height = 4, dpi=600)

```

```{r}
#| label: fig-add_int
#| include: true
#| column: page-right
#| fig-cap: "SDM bifactorial Linear Quantile Regression comparison of two calculation models: simple addition of the two factors (A), with interaction of the factors together (B). All negatives results of model are NA and appear in grey."
#| fig-width: 14
#| fig-height: 7

titleG <- sprintf("Linear QR comparison addition and interacton")
p1<-rqdata$pl_rq_all_2d[[1]][["RQ2add_11112"]]$all + 
      labs(title="Addition")

p2<-rqdata$pl_rq_sel_2d[[1]][["RQ2int_11112"]]$all + # va chercher le 1er interaction, il faut faire mieux!
      labs(title="Interaction")

plot_tmp <- ggarrange(
  p1 + theme(axis.title = element_blank(),
             aspect.ratio=1),
  p2 + theme(axis.title = element_blank(),
             aspect.ratio=1),
  ncol=2, nrow=1,
  labels="AUTO",legend="right",
  common.legend = TRUE)
plot_tmp <- annotate_figure(plot_tmp,
                # top = text_grob(titleG, size=18),
                left = text_grob(p1$labels$y, rot = 90),
                bottom = text_grob(p1$labels$x)) +
        bgcolor("white")

plot_tmp
ggsave(sprintf("%sfig-add_int.tiff",wdgraph),
     plot = plot_tmp,
     width = 16, height = 8, dpi=600)
```

:::

### Comparison of the three types of model

::: column-page-right

```{r}
#| label: aic_res_3mod

df <- bind_rows(
  rqdata$rq_Mod_sel_sm,
  nlrqdata$rq_Mod_sel_sm,
  rqbsdata$rq_Mod_sel_sm) %>% 
  group_by(typetxt) %>% 
  summarise(AICc_m=round(mean(Delta_AICc),2),
            AICc_sd=round(sd(Delta_AICc),2))
```

Still illustrated by the first couples of factors, the three model types are compared (@fig-aic_3mod) (RQ2int Delta_AICc=`r df$AICc_m[2]`+/-`r df$AICc_sd[2]`, BGauss Delta_AICc=`r df$AICc_m[3]`+/-`r df$AICc_sd[3]`, RQ2bsp Delta_AICc=`r df$AICc_m[1]`+/-`r df$AICc_sd[1]`). The B-Spline method with the lowest AIC shows graphically that it covers the data where they are, but with an overfitting that mathematically is correct but does not allow biologic process modelization (@fig-3mod).

```{r}
#| label: fig-aic_3mod
#| include: true
#| column: page-right
#| fig-cap: "SDM Quantile Regression AIC comparison for Biomass and Density"
#| fig-height: 3

AIC_plot<-bind_rows(
            rqdata$rq_Mod_sel_sm,
            nlrqdata$rq_Mod_sel_sm,
            rqbsdata$rq_Mod_sel_sm) %>% 
  select(all_of(c("Delta_AICc","reponse","typetxt","tau"))) %>% 
  distinct %>% 
  # filter(.,grepl(paste0(sdm_comb_sel$type[1,],collapse="|"),sdmname)) %>% 
  group_by(tau) %>%
  ggplot(aes(x=reponse, #reorder(factors,-AIC),
             y=Delta_AICc,
             color = factor(tau),
             shape = typetxt)) +
  geom_jitter(size= 5) +
  scale_shape_manual(values=c(1, 8, 23)) +
  scale_color_manual(values=colRQ) +
 # facet_grid(.~reponse) +
  labs(#title=titleG, 
       x="Biologic",y="Delta_AICc",
       color="Quantile",shape="Model") +
  theme(axis.text = element_text(size=10,face="bold")) +
  coord_flip(); AIC_plot
  
ggsave(sprintf("%sfig-aic_3mod.tiff",wdgraph),
       plot = AIC_plot,
       width = 8, height = 4, dpi=600)

```

```{r}
#| label: fig-3mod
#| include: true
#| column: page-right
#| fig-cap: "SDM QR model type comparison: linear with interaction (A), Gaussian non-linear (B) and Cubic B-Splines linear (C). All negatives results of model are NA and appear in grey."
#| fig-width: 14
#| fig-height: 7

repi<-1
sdi<-1
titleG <- sprintf("Linear QR comparison addition and interacton")
p1<-rqdata$pl_rq_sel_2d[[repi]][[sdi]]$all + 
      labs(title="Linear interaction",
           fill=NULL)
p2<-nlrqdata$pl_rq_sel_2d[[repi]][[sdi]]$all + 
      labs(title="Gaussian non-linear",
           fill=NULL)
p3<-rqbsdata$pl_rq_sel_2d[[repi]][[sdi]]$all + 
      labs(title="B-Spline linear",
           fill=NULL)

plot_tmp <- ggarrange(
  p1 + theme(axis.title = element_blank(),
             legend.text = element_text(size=8),
             aspect.ratio=1) +
      scale_fill_gradientn(colours=colRQ,limits=c(0,max(
        max(p1$data$RqMod,na.rm=TRUE),
        max(p2$data$RqMod,na.rm=TRUE)
        ))),
  p2 + theme(axis.title = element_blank(),
             legend.text = element_text(size=8),
             aspect.ratio=1) +
      scale_fill_gradientn(colours=colRQ,limits=c(0,max(
        max(p1$data$RqMod,na.rm=TRUE),
        max(p2$data$RqMod,na.rm=TRUE)
        ))),
  p3 + theme(axis.title = element_blank(),
             legend.text = element_text(size=8),
             aspect.ratio=1) +
      scale_fill_gradientn(colours=colRQ,limits=c(0,max(
        max(p1$data$RqMod,na.rm=TRUE),
        max(p2$data$RqMod,na.rm=TRUE)
        ))),
  ncol=3, nrow=1,
  labels="AUTO",
  legend="bottom", common.legend = TRUE)
plot_tmp <- annotate_figure(plot_tmp,
                # top = text_grob(titleG, size=18),
                left = text_grob(p1$labels$y, rot = 90),
                bottom = text_grob(p1$labels$x)) +
        bgcolor("white")

plot_tmp
ggsave(sprintf("%sfig-3mod.tiff",wdgraph),
     plot = plot_tmp,
     width = 18, height = 8, dpi=600)
```

:::

### Quantile choice

::: column-page-right

The quantile is chosen as a compromise between having a high quantile without over representing some high observations and getting a not so high AICc score. The quantile chosen is \tau = `r taus[taut]`, and is used for all further analyses.

```{r}
#| label: graphrq

plot_rq<-map_depth(rqdata$pl_rq_sel_2d,2,
               ~.x$one[[sprintf("%0.3f",tauchoice)]])
plot_nlrq<-map_depth(nlrqdata$pl_rq_sel_2d,2,
               ~.x$one[[sprintf("%0.3f",tauchoice)]])
plot_rqbs<-map_depth(rqbsdata$pl_rq_sel_2d,2,
               ~.x$one[[sprintf("%0.3f",tauchoice)]])

```

:::

## SDM-NEO

### Comparison of linear and nonlinear QR

::: column-page-right

```{r}
#| label: prefig-graphboard_2d

plot_rq <- map2(plot_rq,plot_nlrq,
  ~ map2(.x,.y,
    ~.x + 
    scale_fill_gradientn(colours=colRQ,limits=c(0,max(
      max(.x$data$RqMod,na.rm=TRUE),
      max(.y$data$RqMod,na.rm=TRUE)))) +
      labs(title=model_types$code[2]) +
      theme(
          axis.title.x = element_blank(),
          plot.margin = unit(c(.1,.1,.1,.1), "null")) ) )
plot_nlrq <- map2(plot_nlrq,plot_rq,
  ~ map2(.x,.y,
    ~.x + 
    scale_fill_gradientn(colours=colRQ,limits=c(0,max(
      max(.x$data$RqMod,na.rm=TRUE),
      max(.y$data$RqMod,na.rm=TRUE)))) +
      labs(title=model_types$code[3]) +
    theme(
          plot.margin = unit(c(.1,.1,.1,.1), "null")) ) )

pl_board_rq_nlrq <- map2(plot_rq,plot_nlrq,
  ~ map2(.x,.y,
      ~ { .x / .y  +
        plot_layout(guides = 'collect',tag_level = 'new',widths = c()) & 
        theme(text=element_text(size=10),
              aspect.ratio=1,
              legend.position = "bottom") 
        } ) %>% 
  wrap_plots(nrow=1,ncol=4,tag_level="new") + #plot_layout(widths = c(.1,50,.1,50)) +
  plot_annotation(title = sprintf("SDM-NEO (tau=%g)",taus[taut]),
                  tag_levels = c('A', '1')) & 
  theme(plot.title = element_text(hjust = 0.5),
        plot.tag = element_text(size = 11,face = "bold")),
        plot.tag.position = "top")

iwalk(pl_board_rq_nlrq,
  ~ggsave(sprintf("%sfig-graphboard_2d_%s.tiff",wdgraph,.y),
       plot = .x, width = 12, height = 4, dpi=600) )

```

```{r}
#| label: prefig-graphboard_2d_stats

tmp_df<-list(
  rqdata$rq_Mod_sel,
  nlrqdata$rq_Mod_sel#,
  # rqbsdata$rq_Mod_sel
  ) %>% 
  setNames(model_types$code[2:3]) %>%
  map_depth(.,3, ~map_dfr(.$mod_pred_t, ~.) ) %>%
  list_flatten() %>% list_flatten() %>% 
  bind_rows() %>% 
  left_join(sdm_comb_sel, by = "sdmname" ) %>% 
  mutate(across(all_of(c("code","Var")), as.factor)) #%>% 
  # mutate(across(all_of(c("RqMod")), ~replace_outliers(.,1.3)))

pl_sdm_stat <- map(reponse_l , ~{
  tmp_df %>% 
   filter(repi==.x$repi) %>% 
    # mutate(across(where(is.factor), fct_drop)) %>%
    mutate(across(all_of(c("RqMod")), ~replace_outliers(.,1.3))) %>% 
  ggplot() + 
    geom_flat_violin(aes(x=code, fill = code,
                     y = RqMod),
                     alpha = 0.5,size = .1) +
    stat_summary(aes(x=code, fill = code,
                     y = RqMod, color = code),  size=.5,
                 fun.data = mean_se, show.legend = FALSE) +
    coord_flip() +
    facet_wrap( ~ Var, 
               nrow = 1, #scales = "free_y", 
               labeller = label_wrap_gen(width = 30)) + 
    labs(y = sprintf("SDM-NEO %s",unique(tmp_df$rvar)), x="") +
    Scale_brew() +
    theme(legend.position="none") } )

iwalk(pl_sdm_stat,
  ~ggsave(sprintf("%sfig-graphboard_2d_stats_%s.tiff",wdgraph,.y),
       plot = .x, width = 12, height = 4, dpi=600) )

```

The four couples of factors have been treated with the different ways of calculation: either linear with interaction, or non-linear with bifactorial gaussian equation with the biomass as biologic response @fig-graphboard_b.

```{r}
#| label: fig-graphboard_b
#| include: true
#| fig-cap: "The four selected factors couples models computed with linear with interaction (top, numbered 1) and nonlinear with gaussian equation (bottom numbered 2), the biologic response being the biomass in Ash Free Dry Weight per square meter"
#| fig-height: 10

pl_board_rq_nlrq$Biomass

```

```{r}
#| label: fig-graphboard_b_stats
#| include: true
#| fig-cap: "The four selected factors couples models computed with linear with interactionand nonlinear with gaussian equation, the biologic response being the biomass in Ash Free Dry Weight per square meter"
#| fig-height: 3

pl_sdm_stat$Biomass
```

The same board of plots with density are in @fig-graphboard_d.

```{r}
#| label: fig-graphboard_d
#| include: true
#| fig-cap: "Selected factors couples models computed with linear with interaction (top, numbered 1) and nonlinear with gaussian equation (bottom numbered 2), the biologic response being the density in individuals per square meter"
#| fig-height: 10
pl_board_rq_nlrq$Density

```

```{r}
#| label: fig-graphboard_d_stats
#| include: true
#| fig-cap: "The four selected factors couples models computed with linear with interaction and nonlinear with gaussian equation, the biologic response being the density in individuals per square meter"
#| fig-height: 3

pl_sdm_stat$Density
```
:::

### 3D visualisation

::: column-page-right

All quantiles representation

<!-- ::: panel-tabset -->

```{r}
#| include: true
#| layout-ncol: 2

nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11112$all
nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11134$all
nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11137$all
nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11156$all

# iwalk(nlrqdata$pl_rq_sel_3d,
#       ~ {
#         cat('#### ', .y, '\n\n')
#         map(.x, ~print(.x$all))
#         cat('\n\n')
#         })

# imap(nlrqdata$pl_rq_sel_3d,
#       ~ {
#         knitr::knit_child(text = c(
#               "#### ", .y, "\n\n",
#               "```{r}", "\n\n",
#               "#| layout-ncol: 2",
#               "#| label: fig-stat descr ", .y, "\n\n",
#               "#| fig-cap: try about this ", .y, "\n\n",
#               "map(.x, ~print(.x$all))",
#               "\n\n", "```", "\n\n"
#             ), envir = globalenv(), quiet = TRUE)
#         })

```

<!-- ::: -->

Only the chosen quantile

<!-- ::: panel-tabset -->

```{r}
#| include: true
#| layout-ncol: 2

nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11112$one$`0.975`
nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11134$one$`0.975`
nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11137$one$`0.975`
nlrqdata$pl_rq_sel_3d$Biomass$RQ2nli_11156$one$`0.975`

# 
# iwalk(nlrqdata$pl_rq_sel_3d, 
#       ~ {
#         cat('#### ', .y, '\n\n')
#         map(.x, ~print(.x$one[[sprintf("%0.3f",tauchoice)]]))
#         cat('\n\n')
#         })
```

<!-- ::: -->

:::

### SDM-NEO Maps

::: column-page-right


```{r}
#| label: prefig-graphboard_map
#| include: true

tmap_mode("plot") # "plot" "view"

# tm_mars_gb_b<-nlrqdata$pl_rq_sel_map$Biomass %>% 
#   map(., ~ .x$all) %>% 
#   tmap_arrange(.,
#                asp=NA, ncol=1,
#                sync = TRUE,
#                outer.margins=0)

# tm_mars_gb_b<- nlrqdata$pl_rq_sel_map$Biomass %>%
#           map(., ~ .x$all) %>% 
#           map_depth(.,1, tmap_grob) 
# graphboard_map_b<- tm_mars_gb_b %>% 
#     wrap_elements(.) + plot_layout(ncol = 1)

walk(nlrqdata$pl_rq_sel_map,
     ~iwalk(., ~tmap_save(.x$all, dpi=400,
              filename= sprintf("%sfig-graphboard_map_%s.tiff",wdgraph,.y) ) ) )

```

Biomass based SDMs
```{r}
#| label: fig-graphboard_map_b
#| include: true
#| fig-cap: "The four selected factors couples models maps, the biologic response being the biomass in Ash Free Dry Weight per square meter"
#| fig-height: 6

walk(nlrqdata$pl_rq_sel_map$Biomass, ~print(.x$all))

```

Density based SDMs
```{r}
#| label: fig-graphboard_map_d
#| include: true
#| fig-cap: "The four selected factors couples models maps, the biologic response being the density in individuals per square meter"
#| fig-height: 6

walk(nlrqdata$pl_rq_sel_map$Density, ~ print(.x$all))

```


Comparison version

::: panel-tabset

```{r}
#| include: true
#| results: asis
#| fig-height: 6
#| fig-width: 16

tmap_mode("plot") # "plot" "view"

iwalk(nlrqdata$pl_rq_sel_map$Biomass, 
      ~ {
        cat('#### ', .y, '\n\n')
        print(.x$all)
        cat('\n\n')
        })

```

:::

:::

### SDM-NEO maps stats

```{r}
#| label: prefig-map_stats

tmp_df<-list(
  rqdata$rq_Mod_mars_sel_per,
  nlrqdata$rq_Mod_mars_sel_per#,
  # rqbsdata$rq_Mod_mars_sel_per
  ) %>% 
  setNames(model_types$code[2:3]) %>%
  list_flatten(name_spec = "{inner}") %>% list_flatten(name_spec = "{inner}") %>% 
  bind_rows(.id="sdmname") %>% 
  st_drop_geometry() %>% 
  left_join(sdm_comb_sel, by = "sdmname" ) %>% 
  filter(!Zone %in% c("Bay","Octeville","Ilot Oiseaux","Cote Fleurie")) %>%
  mutate(across(all_of(c("code","Var")), as.factor)) #%>% 
  # mutate(across(all_of(c("RqMod")), ~replace_outliers(.,1.3)))

pl_sdm_stat_map <- map(reponse_l , ~{
  tmp_df %>% 
   filter(repi==.x$repi) %>% 
    # mutate(across(where(is.factor), fct_drop)) %>%
    mutate(across(all_of(c(sprintf("t%.3f",tauchoice))), ~replace_outliers(.,1.3))) %>% 
  ggplot() + 
    geom_flat_violin(aes(x=Period, fill = code,
                     y = .data[[sprintf("t%.3f",tauchoice)]]),
                     alpha = 0.5,size = .1) +
    stat_summary(aes(x=Period, fill = code,
                     y = .data[[sprintf("t%.3f",tauchoice)]],
                     color = code),  size=.5,
                 fun.data = mean_se, show.legend = FALSE) +
    coord_flip() +
    facet_grid(Var ~ Zone, 
               # nrow = 1, #scales = "free_y", 
               labeller = label_wrap_gen(width = 30)) + 
    labs(y = sprintf("SDM-NEO %s",unique(tmp_df$rvar)), x="") +
    Scale_brew() +
    guides(fill=guide_legend(nrow=2,byrow=TRUE)) +
    theme(legend.position="bottom") } )

iwalk(pl_sdm_stat_map,
  ~ggsave(sprintf("%sfig-map_stats_%s.tiff",wdgraph,.y),
       plot = .x, width = 12, height = 14, dpi=600) )

```

#### Biomass

::: column-page-right

```{r}
#| label: fig-map_sdmstats_b
#| include: true
#| fig-cap: "The four models result on the estuary regarding Areas and Periods, with the two calculation modes, for the biomass response"
#| fig-height: 12
#| fig-width: 16

pl_sdm_stat_map$Biomass

```

Detailed stats by model

::: panel-tabset

```{r}
#| include: true
#| results: asis
#| fig-height: 5
#| fig-width: 15

iwalk(nlrqdata$pl_rq_mars_sel_st$Biomass, 
      ~ {
        cat('#### ', .y, '\n\n')
        print(.x$geog$plot)
        cat('\n\n')
        })

```

:::

:::

#### Density

::: column-page-right
```{r}
#| label: fig-map_sdmstats_d
#| include: true
#| fig-cap: "The four models result on the estuary regarding Areas and Periods, with the two calculation modes, for the biomass response"
#| fig-height: 12
#| fig-width: 16

pl_sdm_stat_map$Density

```

Detailed stats by model

::: panel-tabset
```{r}
#| include: true
#| results: asis
#| fig-height: 5
#| fig-width: 15

iwalk(nlrqdata$pl_rq_mars_sel_st$Density, 
      ~ {
        cat('#### ', .y, '\n\n')
        print(.x$geog$plot)
        cat('\n\n')
        })

```
:::
:::

# Final actions and save

::: column-page-right

```{r}
#| label: finalsave_rdata

# rm("rqdata","nlrqdata","rqbsdata")
# save(list=(ls()[!grepl("rq_", ls())]),
     # file = paste0(rdataout,".RData"))
beepr::beep(2)

```
:::

# Supplementary data

## Software details

::: {.callout-tip collapse="true"}
## Expand for R Session Info

```{r, echo = FALSE}
#| include: true

library(sessioninfo)
pkg_sesh <- session_info(pkgs = "attached")
quarto_version <- system("quarto --version", intern = TRUE)
pkg_sesh$platform$quarto <- paste(
  system("quarto --version", intern = TRUE),
  "@",
  quarto::quarto_path()
  )
pkg_sesh
```
:::

# References {.unnumbered}
